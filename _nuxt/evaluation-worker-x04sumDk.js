var M0=Object.defineProperty;var h=(c1,I1)=>M0(c1,"name",{value:I1,configurable:!0});(function(){"use strict";var w1,x1;var c1=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},I1={};let J1=(w1=class{constructor(){return u0||this}equals(s){return s&&this.termType===s.termType}},h(w1,"Wildcard"),w1);Object.defineProperty(J1.prototype,"value",{enumerable:!0,value:"*"}),Object.defineProperty(J1.prototype,"termType",{enumerable:!0,value:"Wildcard"});var u0=new J1;I1.Wildcard=J1;var o0=function(){var e=h(function(i,a,n,u){for(n=n||{},u=i.length;u--;n[i[u]]=a);return n},"o"),s=[6,12,13,15,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],o=[2,247],E=[100,110,113,115,116,123,126,131,329,330,331,332,333],y=[2,409],e2=[1,18],E2=[1,27],I2=[13,16,45,197,224,229,308],T2=[28,29,53],Z2=[28,53],c=[1,42],l=[1,45],f=[1,41],p=[1,44],w3=[123,126],pe=[1,67],G1=[39,45,87],he=[13,16,45,197,224,308],K2=[1,87],J2=[2,281],p1=[1,86],p2=[13,16,45,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],U1=[6,28,29,53,63,70,73,81,83,85],fe=[6,13,16,28,29,53,63,70,73,81,83,85,87,308],ye=[6,13,16,28,29,45,53,63,70,73,81,82,83,85,87,89,197,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314],t3=[6,13,16,28,29,31,39,45,47,48,53,63,70,73,81,82,83,85,87,89,109,112,121,123,126,128,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,337,338,340,341,342,343,344,345,346],O2=[13,16,308],Fe=[112,132,327,334],de=[13,16,112,132,308],B1=[1,111],Ee=[1,117],be=[112,132,327,328,334],P3=[13,16,112,132,308,328],r3=[28,29,45,53,87],w=[1,138],m=[1,151],a2=[1,128],i2=[1,127],n2=[1,129],P=[1,140],x=[1,141],G=[1,142],U=[1,143],B=[1,144],j=[1,145],M=[1,147],Q=[1,148],H=[2,457],W=[1,158],X=[1,159],Y=[1,160],V=[1,152],k=[1,153],v=[1,156],b=[1,171],_=[1,172],T=[1,173],D=[1,174],A=[1,175],g=[1,176],N=[1,167],S=[1,168],I=[1,169],C=[1,170],t2=[1,157],z=[1,166],q=[1,161],Z=[1,162],K=[1,163],J=[1,164],$=[1,165],C2=[6,13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],j1=[1,195],M1=[6,31,73,81,83,85],x3=[2,285],G3=[1,199],Q2=[1,201],H2=[6,31,70,73,81,83,85],h1=[2,283],f1=[1,207],Q1=[1,218],L2=[1,223],H1=[1,219],N2=[1,225],S2=[1,226],A2=[1,224],_e=[6,63,70,73,81,83,85],Te=[1,236],De=[2,334],Ae=[1,243],ge=[1,241],f2=[6,193],s3=[2,349],Ne=[2,339],W2=[28,128],Se=[47,48,193,272],a3=[47,48,193,242,272],y1=[47,48,193,242,246,272],F1=[47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,341,342,343,344,345,346],h2=[39,47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,338,341,342,343,344,345,346],Ie=[1,271],Ce=[1,270],c2=[6,13,16,29,31,39,45,47,48,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],me=[1,281],Ve=[1,280],b2=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],W1=[45,89],i3=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],n3=[13,16,31,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],u3=[31,89],o3=[48,87],$2=[6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338],m2=[6,13,16,39,45,48,82,87,89,231,263,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338,340],ke=[1,313],d1=[6,85],U3=[6,31,81,83,85],ve=[2,361],w2=[2,353],e1=[1,343],X1=[31,112,335],P2=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],B3=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335],Re=[6,109,193],t1=[31,112],l2=[13,16,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],j3=[1,390],M3=[1,391],X2=[13,16,87,197,308,314],Oe=[13,16,39,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],c3=[1,417],l3=[1,418],Le=[13,16,48,197,229,308],Y2=[6,31,85],we=[6,13,16,31,45,73,81,83,85,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],Q3=[6,13,16,29,31,45,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,231,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,346,347,348,349,350,351],r1=[29,31,85,112,159,160,161,163,164],p3=[1,443],h3=[1,444],Pe=[1,449],s1=[31,112,193,232,318,335],f3=[13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],xe=[13,16,31,45,48,82,87,89,112,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],H3=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],Y1=[13,16,31,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],z1=[31,45],Ge=[1,507],Ue=[1,508],Be=[6,13,16,29,31,39,45,47,48,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,336,338,341,342,343,344,345,346,347,348,349,350,351],y3=[29,31,85,112,159,160,161,163,164,335],a1=[6,13,16,31,45,70,73,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],je=[13,16,31,45,48,82,87,89,112,193,197,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],Me=[2,352],W3=[13,16,197,308,314],Qe=[1,565],E1=[6,13,16,31,45,76,78,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],He=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],x2=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],We=[13,16,87,308],G2=[2,364],b1=[29,31,85,112,159,160,161,163,164,193,232,318,335],F3=[31,112,193,232,272,318,335],U2=[2,359],Xe=[13,16,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],d3=[29,31,85,112,159,160,161,163,164,193,232,272,318,335],Ye=[13,16,31,45,82,87,89,112,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],ze=[2,347],X3={trace:h(function(){},"trace"),yy:{},symbols_:{error:2,QueryOrUpdate:3,Prologue:4,QueryOrUpdate_group0:5,EOF:6,Query:7,Qry:8,Query_option0:9,Prologue_repetition0:10,BaseDecl:11,BASE:12,IRIREF:13,PrefixDecl:14,PREFIX:15,PNAME_NS:16,SelectClauseWildcard:17,Qry_repetition0:18,WhereClause:19,SolutionModifierNoGroup:20,SelectClauseVars:21,Qry_repetition1:22,SolutionModifier:23,CONSTRUCT:24,ConstructTemplate:25,Qry_repetition2:26,Qry_repetition3:27,WHERE:28,"{":29,Qry_option0:30,"}":31,DESCRIBE:32,Qry_group0:33,Qry_repetition4:34,Qry_option1:35,ASK:36,Qry_repetition5:37,SelectClauseBase:38,"*":39,SelectClauseVars_repetition_plus0:40,SELECT:41,SelectClauseBase_option0:42,SelectClauseItem:43,Var:44,"(":45,Expression:46,AS:47,")":48,SubSelect:49,SubSelect_option0:50,SubSelect_option1:51,DatasetClause:52,FROM:53,DatasetClause_option0:54,iri:55,WhereClause_option0:56,GroupGraphPattern:57,SolutionModifier_option0:58,SolutionModifierNoGroup_option0:59,SolutionModifierNoGroup_option1:60,SolutionModifierNoGroup_option2:61,GroupClause:62,GROUP:63,BY:64,GroupClause_repetition_plus0:65,GroupCondition:66,BuiltInCall:67,FunctionCall:68,HavingClause:69,HAVING:70,HavingClause_repetition_plus0:71,OrderClause:72,ORDER:73,OrderClause_repetition_plus0:74,OrderCondition:75,ASC:76,BrackettedExpression:77,DESC:78,Constraint:79,LimitOffsetClauses:80,LIMIT:81,INTEGER:82,OFFSET:83,ValuesClause:84,VALUES:85,InlineData:86,VAR:87,InlineData_repetition0:88,NIL:89,InlineData_repetition1:90,InlineData_repetition_plus2:91,InlineData_repetition3:92,DataBlock:93,DataBlockValueList:94,DataBlockValueList_repetition_plus0:95,Update:96,Update_repetition0:97,Update1:98,Update_option0:99,LOAD:100,Update1_option0:101,Update1_option1:102,Update1_group0:103,Update1_option2:104,GraphRefAll:105,Update1_group1:106,Update1_option3:107,GraphOrDefault:108,TO:109,CREATE:110,Update1_option4:111,GRAPH:112,INSERTDATA:113,QuadPattern:114,DELETEDATA:115,DELETEWHERE:116,Update1_option5:117,InsertDeleteClause:118,Update1_repetition0:119,IntoGraphClause:120,INTO:121,GraphRef:122,DELETE:123,InsertDeleteClause_option0:124,InsertClause:125,INSERT:126,UsingClause:127,USING:128,UsingClause_option0:129,WithClause:130,WITH:131,DEFAULT:132,GraphOrDefault_option0:133,GraphRefAll_group0:134,Quads:135,Quads_option0:136,Quads_repetition0:137,QuadsNotTriples:138,VarOrIri:139,QuadsNotTriples_option0:140,QuadsNotTriples_option1:141,QuadsNotTriples_option2:142,TriplesTemplate:143,TriplesTemplate_repetition0:144,TriplesSameSubject:145,TriplesTemplate_option0:146,GroupGraphPatternSub:147,GroupGraphPatternSub_option0:148,GroupGraphPatternSub_repetition0:149,GroupGraphPatternSubTail:150,GraphPatternNotTriples:151,GroupGraphPatternSubTail_option0:152,GroupGraphPatternSubTail_option1:153,TriplesBlock:154,TriplesBlock_repetition0:155,TriplesSameSubjectPath:156,TriplesBlock_option0:157,GroupOrUnionGraphPattern:158,OPTIONAL:159,MINUS:160,SERVICE:161,GraphPatternNotTriples_option0:162,FILTER:163,BIND:164,InlineDataOneVar:165,InlineDataFull:166,InlineDataOneVar_repetition0:167,InlineDataFull_repetition0:168,InlineDataFull_repetition_plus1:169,InlineDataFull_repetition2:170,DataBlockValue:171,Literal:172,QuotedTriple:173,UNDEF:174,GroupOrUnionGraphPattern_repetition0:175,ArgList:176,ArgList_option0:177,ArgList_repetition0:178,ExpressionList:179,ExpressionList_repetition0:180,ConstructTemplate_option0:181,ConstructTriples:182,ConstructTriples_repetition0:183,ConstructTriples_option0:184,VarOrTermOrQuotedTP:185,PropertyListNotEmpty:186,TriplesNode:187,PropertyList:188,PropertyList_option0:189,VerbObjectList:190,PropertyListNotEmpty_repetition0:191,SemiOptionalVerbObjectList:192,";":193,SemiOptionalVerbObjectList_option0:194,Verb:195,ObjectList:196,a:197,ObjectList_repetition0:198,Object:199,GraphNode:200,Object_option0:201,PropertyListPathNotEmpty:202,TriplesNodePath:203,TriplesSameSubjectPath_option0:204,O:205,PropertyListPathNotEmpty_repetition0:206,PropertyListPathNotEmptyTail:207,O_group0:208,ObjectListPath:209,ObjectListPath_repetition0:210,ObjectPath:211,GraphNodePath:212,ObjectPath_option0:213,Path:214,Path_repetition0:215,PathSequence:216,PathSequence_repetition0:217,PathEltOrInverse:218,PathElt:219,PathPrimary:220,PathElt_option0:221,PathEltOrInverse_option0:222,IriOrA:223,"!":224,PathNegatedPropertySet:225,PathOneInPropertySet:226,PathNegatedPropertySet_repetition0:227,PathNegatedPropertySet_option0:228,"^":229,TriplesNode_repetition_plus0:230,"[":231,"]":232,TriplesNodePath_repetition_plus0:233,VarOrTermOrQuotedTPExpr:234,VarOrTerm:235,GraphTerm:236,BlankNode:237,ConditionalOrExpression:238,ConditionalAndExpression:239,ConditionalOrExpression_repetition0:240,ConditionalOrExpressionTail:241,"||":242,RelationalExpression:243,ConditionalAndExpression_repetition0:244,ConditionalAndExpressionTail:245,"&&":246,NumericExpression:247,RelationalExpression_group0:248,RelationalExpression_option0:249,IN:250,MultiplicativeExpression:251,NumericExpression_repetition0:252,AdditiveExpressionTail:253,AdditiveExpressionTail_group0:254,NumericLiteralPositive:255,AdditiveExpressionTail_repetition0:256,NumericLiteralNegative:257,AdditiveExpressionTail_repetition1:258,UnaryExpression:259,MultiplicativeExpression_repetition0:260,MultiplicativeExpressionTail:261,MultiplicativeExpressionTail_group0:262,"+":263,PrimaryExpression:264,"-":265,ExprQuotedTP:266,Aggregate:267,FUNC_ARITY0:268,FUNC_ARITY1:269,FUNC_ARITY1_SPARQL_STAR:270,FUNC_ARITY2:271,",":272,FUNC_ARITY3:273,FUNC_ARITY3_SPARQL_STAR:274,BuiltInCall_group0:275,BOUND:276,BNODE:277,BuiltInCall_option0:278,EXISTS:279,COUNT:280,Aggregate_option0:281,Aggregate_group0:282,FUNC_AGGREGATE:283,Aggregate_option1:284,GROUP_CONCAT:285,Aggregate_option2:286,Aggregate_option3:287,GroupConcatSeparator:288,SEPARATOR:289,"=":290,String:291,LANGTAG:292,"^^":293,DECIMAL:294,DOUBLE:295,BOOLEAN:296,INTEGER_POSITIVE:297,DECIMAL_POSITIVE:298,DOUBLE_POSITIVE:299,INTEGER_NEGATIVE:300,DECIMAL_NEGATIVE:301,DOUBLE_NEGATIVE:302,STRING_LITERAL1:303,STRING_LITERAL2:304,STRING_LITERAL_LONG1:305,STRING_LITERAL_LONG2:306,PrefixedName:307,PNAME_LN:308,BLANK_NODE_LABEL:309,ANON:310,QuotedTP:311,"<<":312,qtSubjectOrObject:313,">>":314,DataValueTerm:315,AnnotationPattern:316,"{|":317,"|}":318,AnnotationPatternPath:319,ExprVarOrTerm:320,QueryOrUpdate_group0_option0:321,Prologue_repetition0_group0:322,Qry_group0_repetition_plus0:323,SelectClauseBase_option0_group0:324,DISTINCT:325,REDUCED:326,NAMED:327,SILENT:328,CLEAR:329,DROP:330,ADD:331,MOVE:332,COPY:333,ALL:334,".":335,UNION:336,"|":337,"/":338,PathElt_option0_group0:339,"?":340,"!=":341,"<":342,">":343,"<=":344,">=":345,NOT:346,CONCAT:347,COALESCE:348,SUBSTR:349,REGEX:350,REPLACE:351,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",12:"BASE",13:"IRIREF",15:"PREFIX",16:"PNAME_NS",24:"CONSTRUCT",28:"WHERE",29:"{",31:"}",32:"DESCRIBE",36:"ASK",39:"*",41:"SELECT",45:"(",47:"AS",48:")",53:"FROM",63:"GROUP",64:"BY",70:"HAVING",73:"ORDER",76:"ASC",78:"DESC",81:"LIMIT",82:"INTEGER",83:"OFFSET",85:"VALUES",87:"VAR",89:"NIL",100:"LOAD",109:"TO",110:"CREATE",112:"GRAPH",113:"INSERTDATA",115:"DELETEDATA",116:"DELETEWHERE",121:"INTO",123:"DELETE",126:"INSERT",128:"USING",131:"WITH",132:"DEFAULT",159:"OPTIONAL",160:"MINUS",161:"SERVICE",163:"FILTER",164:"BIND",174:"UNDEF",193:";",197:"a",224:"!",229:"^",231:"[",232:"]",242:"||",246:"&&",250:"IN",263:"+",265:"-",268:"FUNC_ARITY0",269:"FUNC_ARITY1",270:"FUNC_ARITY1_SPARQL_STAR",271:"FUNC_ARITY2",272:",",273:"FUNC_ARITY3",274:"FUNC_ARITY3_SPARQL_STAR",276:"BOUND",277:"BNODE",279:"EXISTS",280:"COUNT",283:"FUNC_AGGREGATE",285:"GROUP_CONCAT",289:"SEPARATOR",290:"=",292:"LANGTAG",293:"^^",294:"DECIMAL",295:"DOUBLE",296:"BOOLEAN",297:"INTEGER_POSITIVE",298:"DECIMAL_POSITIVE",299:"DOUBLE_POSITIVE",300:"INTEGER_NEGATIVE",301:"DECIMAL_NEGATIVE",302:"DOUBLE_NEGATIVE",303:"STRING_LITERAL1",304:"STRING_LITERAL2",305:"STRING_LITERAL_LONG1",306:"STRING_LITERAL_LONG2",308:"PNAME_LN",309:"BLANK_NODE_LABEL",310:"ANON",312:"<<",314:">>",317:"{|",318:"|}",325:"DISTINCT",326:"REDUCED",327:"NAMED",328:"SILENT",329:"CLEAR",330:"DROP",331:"ADD",332:"MOVE",333:"COPY",334:"ALL",335:".",336:"UNION",337:"|",338:"/",340:"?",341:"!=",342:"<",343:">",344:"<=",345:">=",346:"NOT",347:"CONCAT",348:"COALESCE",349:"SUBSTR",350:"REGEX",351:"REPLACE"},productions_:[0,[3,3],[7,2],[4,1],[11,2],[14,3],[8,4],[8,4],[8,5],[8,7],[8,5],[8,4],[17,2],[21,2],[38,2],[43,1],[43,5],[49,4],[49,4],[52,3],[19,2],[23,2],[20,3],[62,3],[66,1],[66,1],[66,3],[66,5],[66,1],[69,2],[72,3],[75,2],[75,2],[75,1],[75,1],[80,2],[80,2],[80,4],[80,4],[84,2],[86,4],[86,4],[86,6],[86,2],[94,3],[96,3],[98,4],[98,3],[98,5],[98,4],[98,2],[98,2],[98,2],[98,5],[120,2],[118,3],[118,1],[125,2],[127,3],[130,2],[108,1],[108,2],[122,2],[105,1],[105,1],[114,3],[135,2],[138,7],[143,3],[57,3],[57,3],[147,2],[150,3],[154,3],[151,1],[151,2],[151,2],[151,3],[151,4],[151,2],[151,6],[151,1],[93,1],[93,1],[165,4],[166,4],[166,6],[171,1],[171,1],[171,1],[171,1],[158,2],[79,1],[79,1],[79,1],[68,2],[176,1],[176,5],[179,1],[179,4],[25,3],[182,3],[145,2],[145,2],[188,1],[186,2],[192,2],[190,2],[195,1],[195,1],[196,2],[199,2],[156,2],[156,2],[202,2],[207,1],[207,2],[205,2],[209,2],[211,2],[214,2],[216,2],[219,2],[218,2],[220,1],[220,2],[220,3],[225,1],[225,1],[225,4],[226,1],[226,2],[187,3],[187,3],[203,3],[203,3],[200,1],[200,1],[212,1],[212,1],[234,1],[235,1],[235,1],[139,1],[139,1],[44,1],[236,1],[236,1],[236,1],[236,1],[46,1],[238,2],[241,2],[239,2],[245,2],[243,1],[243,3],[243,4],[247,2],[253,2],[253,2],[253,2],[251,2],[261,2],[259,2],[259,2],[259,2],[259,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[77,3],[67,1],[67,2],[67,4],[67,4],[67,6],[67,8],[67,8],[67,2],[67,4],[67,2],[67,4],[67,3],[267,5],[267,5],[267,6],[288,4],[172,1],[172,2],[172,3],[172,1],[172,1],[172,1],[172,1],[172,1],[172,1],[255,1],[255,1],[255,1],[257,1],[257,1],[257,1],[291,1],[291,1],[291,1],[291,1],[55,1],[55,1],[307,1],[307,1],[237,1],[237,1],[311,5],[173,5],[313,1],[313,1],[313,1],[313,1],[313,1],[315,1],[315,1],[315,1],[185,1],[185,1],[185,1],[316,3],[319,3],[266,5],[320,1],[320,1],[320,1],[223,1],[223,1],[321,0],[321,1],[5,1],[5,1],[5,1],[9,0],[9,1],[322,1],[322,1],[10,0],[10,2],[18,0],[18,2],[22,0],[22,2],[26,0],[26,2],[27,0],[27,2],[30,0],[30,1],[323,1],[323,2],[33,1],[33,1],[34,0],[34,2],[35,0],[35,1],[37,0],[37,2],[40,1],[40,2],[324,1],[324,1],[42,0],[42,1],[50,0],[50,1],[51,0],[51,1],[54,0],[54,1],[56,0],[56,1],[58,0],[58,1],[59,0],[59,1],[60,0],[60,1],[61,0],[61,1],[65,1],[65,2],[71,1],[71,2],[74,1],[74,2],[88,0],[88,2],[90,0],[90,2],[91,1],[91,2],[92,0],[92,2],[95,1],[95,2],[97,0],[97,4],[99,0],[99,2],[101,0],[101,1],[102,0],[102,1],[103,1],[103,1],[104,0],[104,1],[106,1],[106,1],[106,1],[107,0],[107,1],[111,0],[111,1],[117,0],[117,1],[119,0],[119,2],[124,0],[124,1],[129,0],[129,1],[133,0],[133,1],[134,1],[134,1],[134,1],[136,0],[136,1],[137,0],[137,2],[140,0],[140,1],[141,0],[141,1],[142,0],[142,1],[144,0],[144,3],[146,0],[146,1],[148,0],[148,1],[149,0],[149,2],[152,0],[152,1],[153,0],[153,1],[155,0],[155,3],[157,0],[157,1],[162,0],[162,1],[167,0],[167,2],[168,0],[168,2],[169,1],[169,2],[170,0],[170,2],[175,0],[175,3],[177,0],[177,1],[178,0],[178,3],[180,0],[180,3],[181,0],[181,1],[183,0],[183,3],[184,0],[184,1],[189,0],[189,1],[191,0],[191,2],[194,0],[194,1],[198,0],[198,3],[201,0],[201,1],[204,0],[204,1],[206,0],[206,2],[208,1],[208,1],[210,0],[210,3],[213,0],[213,1],[215,0],[215,3],[217,0],[217,3],[339,1],[339,1],[339,1],[221,0],[221,1],[222,0],[222,1],[227,0],[227,3],[228,0],[228,1],[230,1],[230,2],[233,1],[233,2],[240,0],[240,2],[244,0],[244,2],[248,1],[248,1],[248,1],[248,1],[248,1],[248,1],[249,0],[249,1],[252,0],[252,2],[254,1],[254,1],[256,0],[256,2],[258,0],[258,2],[260,0],[260,2],[262,1],[262,1],[275,1],[275,1],[275,1],[275,1],[275,1],[278,0],[278,1],[281,0],[281,1],[282,1],[282,1],[284,0],[284,1],[286,0],[286,1],[287,0],[287,1]],performAction:h(function(a,n,u,F,d,t,g2){var r=t.length-1;switch(d){case 1:if(t[r-1]=t[r-1]||{},L.base&&(t[r-1].base=L.base),L.base="",t[r-1].prefixes=L.prefixes,L.prefixes=null,L.pathOnly){if(t[r-1].type==="path"||"termType"in t[r-1])return t[r-1];throw new Error("Received full SPARQL query in path only mode")}else if(t[r-1].type==="path"||"termType"in t[r-1])throw new Error("Received only path in full SPARQL mode");if(t[r-1].type==="update"){const O={};for(const r2 of t[r-1].updates)if(r2.updateType==="insert"){const R={};for(const F2 of r2.insert)if(F2.type==="bgp"||F2.type==="graph")for(const d2 of F2.triples)d2.subject.termType==="BlankNode"&&(R[d2.subject.value]=!0),d2.predicate.termType==="BlankNode"&&(R[d2.predicate.value]=!0),d2.object.termType==="BlankNode"&&(R[d2.object.value]=!0);for(const F2 of Object.keys(R)){if(O[F2])throw new Error("Detected reuse blank node across different INSERT DATA clauses");O[F2]=!0}}}return t[r-1];case 2:this.$={...t[r-1],...t[r],type:"query"};break;case 4:L.base=q1(t[r]);break;case 5:L.prefixes||(L.prefixes={}),t[r-1]=t[r-1].substr(0,t[r-1].length-1),t[r]=q1(t[r]),L.prefixes[t[r-1]]=t[r];break;case 6:this.$={...t[r-3],...u1(t[r-2]),...t[r-1],...t[r]};break;case 7:if(!L.skipValidation&&(ee(t[r-3].variables.map(r2=>$3(r2.expression))).some(r2=>r2.aggregation==="count"&&!(r2.expression instanceof E3))||t[r].group)){for(const r2 of t[r-3].variables)if(r2.termType==="Variable"){if(!t[r].group||!t[r].group.map(R=>g1(R)).includes(g1(r2)))throw Error("Projection of ungrouped variable (?"+g1(r2)+")")}else if($3(r2.expression).length===0){const R=U0(r2.expression);for(const F2 of R)if(!t[r].group||!t[r].group.map||!t[r].group.map(d2=>g1(d2)).includes(g1(F2)))throw Error("Use of ungrouped variable in projection of operation (?"+g1(F2)+")")}}const N1=t[r-1].where.filter(O=>O.type==="query");if(N1.length>0){const O=t[r-3].variables.filter(R=>R.variable&&R.variable.value).map(R=>R.variable.value),r2=ee(N1.map(R=>R.variables)).map(R=>R.value||R.variable.value);for(const R of O)if(r2.indexOf(R)>=0)throw Error("Target id of 'AS' (?"+R+") already used in subquery")}this.$=u2(t[r-3],u1(t[r-2]),t[r-1],t[r]);break;case 8:this.$=u2({queryType:"CONSTRUCT",template:t[r-3]},u1(t[r-2]),t[r-1],t[r]);break;case 9:this.$=u2({queryType:"CONSTRUCT",template:t[r-2]=t[r-2]?t[r-2].triples:[]},u1(t[r-5]),{where:[{type:"bgp",triples:_1([],t[r-2])}]},t[r]);break;case 10:this.$=u2({queryType:"DESCRIBE",variables:t[r-3]==="*"?[new E3]:t[r-3]},u1(t[r-2]),t[r-1],t[r]);break;case 11:this.$=u2({queryType:"ASK"},u1(t[r-2]),t[r-1],t[r]);break;case 12:this.$=u2(t[r-1],{variables:[new E3]});break;case 13:const ae=t[r].map(O=>O.value||O.variable.value),g3=B0(ae);if(g3.length>0)throw Error("Two or more of the resulting columns have the same name (?"+g3[0]+")");this.$=u2(t[r-1],{variables:t[r]});break;case 14:this.$=u2({queryType:"SELECT"},t[r]&&(t[r-1]=_2(t[r]),t[r]={},t[r][t[r-1]]=!0,t[r]));break;case 16:case 27:this.$=T1(t[r-3],{variable:t[r-1]});break;case 17:case 18:this.$=u2(t[r-3],t[r-2],t[r-1],t[r],{type:"query"});break;case 19:case 58:this.$={iri:t[r],named:!!t[r-1]};break;case 20:this.$={where:t[r].patterns};break;case 21:this.$=u2(t[r-1],t[r]);break;case 22:this.$=u2(t[r-2],t[r-1],t[r]);break;case 23:this.$={group:t[r]};break;case 24:case 25:case 28:case 31:case 33:case 34:this.$=T1(t[r]);break;case 26:this.$=T1(t[r-1]);break;case 29:this.$={having:t[r]};break;case 30:this.$={order:t[r]};break;case 32:this.$=T1(t[r],{descending:!0});break;case 35:this.$={limit:A1(t[r])};break;case 36:this.$={offset:A1(t[r])};break;case 37:this.$={limit:A1(t[r-2]),offset:A1(t[r])};break;case 38:this.$={limit:A1(t[r]),offset:A1(t[r-2])};break;case 39:case 43:this.$={type:"values",values:t[r]};break;case 40:case 84:this.$=t[r-1].map(O=>({[t[r-3]]:O}));break;case 41:case 85:this.$=t[r-1].map(()=>({}));break;case 42:case 86:var z2=t[r-4].length;t[r-4]=t[r-4].map(Y3),this.$=t[r-1].map(function(O){if(O.length!==z2)throw Error("Inconsistent VALUES length");for(var r2={},R=0;R<z2;R++)r2["?"+t[r-4][R].value]=O[R];return r2});break;case 44:case 65:case 100:case 126:case 175:this.$=t[r-1];break;case 45:this.$={type:"update",updates:n1(t[r-2],t[r-1])};break;case 46:this.$=u2({type:"load",silent:!!t[r-2],source:t[r-1]},t[r]&&{destination:t[r]});break;case 47:this.$={type:_2(t[r-2]),silent:!!t[r-1],graph:t[r]};break;case 48:this.$={type:_2(t[r-4]),silent:!!t[r-3],source:t[r-2],destination:t[r]};break;case 49:this.$={type:"create",silent:!!t[r-2],graph:{type:"graph",name:t[r]}};break;case 50:this.$={updateType:"insert",insert:i0(t[r])};break;case 51:this.$={updateType:"delete",delete:se(i0(t[r]))};break;case 52:this.$={updateType:"deletewhere",delete:se(t[r])};break;case 53:this.$={updateType:"insertdelete",...t[r-4],...t[r-3],...u1(t[r-2],"using"),where:t[r].patterns};break;case 54:case 57:case 62:case 167:case 191:case 236:this.$=t[r];break;case 55:this.$={delete:se(t[r-1]),insert:t[r]||[]};break;case 56:this.$={delete:[],insert:t[r]};break;case 59:this.$={graph:t[r]};break;case 60:this.$={type:"graph",default:!0};break;case 61:case 63:this.$={type:"graph",name:t[r]};break;case 64:this.$={[_2(t[r])]:!0};break;case 66:this.$=t[r-1]?V2(t[r],[t[r-1]]):V2(t[r]);break;case 67:var T3=u2(t[r-3]||{triples:[]},{type:"graph",name:t[r-5]});this.$=t[r]?[T3,t[r]]:[T3];break;case 68:case 73:this.$={type:"bgp",triples:V2(t[r-2],[t[r-1]])};break;case 69:this.$={type:"group",patterns:[t[r-1]]};break;case 70:for(const O of t[r-1].filter(r2=>r2.type==="bind")){const r2=t[r-1].indexOf(O),R=new Set;for(const F2 of t[r-1].slice(0,r2))(F2.type==="group"||F2.type==="bgp")&&s0(F2).forEach(d2=>R.add(d2));if(R.has(O.variable.value))throw Error("Variable used to bind is already bound (?"+O.variable.value+")")}this.$={type:"group",patterns:t[r-1]};break;case 71:this.$=t[r-1]?V2([t[r-1]],t[r]):V2(t[r]);break;case 72:this.$=t[r]?[t[r-2],t[r]]:t[r-2];break;case 75:this.$=u2(t[r],{type:"optional"});break;case 76:this.$=u2(t[r],{type:"minus"});break;case 77:this.$=u2(t[r],{type:"graph",name:t[r-1]});break;case 78:this.$=u2(t[r],{type:"service",name:t[r-1],silent:!!t[r-2]});break;case 79:this.$={type:"filter",expression:t[r]};break;case 80:this.$={type:"bind",variable:t[r-1],expression:t[r-3]};break;case 89:this.$=K1(t[r]);break;case 90:this.$=void 0;break;case 91:this.$=t[r-1].length?{type:"union",patterns:V2(t[r-1].map(q3),[q3(t[r])])}:t[r];break;case 95:this.$={...t[r],function:t[r-1]};break;case 96:this.$={type:"functionCall",args:[]};break;case 97:this.$={type:"functionCall",args:n1(t[r-2],t[r-1]),distinct:!!t[r-3]};break;case 98:case 115:case 128:case 247:case 249:case 251:case 253:case 255:case 263:case 267:case 297:case 299:case 303:case 307:case 328:case 341:case 349:case 355:case 361:case 367:case 369:case 373:case 375:case 379:case 381:case 385:case 391:case 395:case 401:case 405:case 409:case 411:case 420:case 428:case 430:case 440:case 444:case 446:case 448:this.$=[];break;case 99:this.$=n1(t[r-2],t[r-1]);break;case 101:this.$=V2(t[r-2],[t[r-1]]);break;case 102:case 112:this.$=re(t[r].map(O=>u2(B2(t[r-1]),O)));break;case 103:this.$=re(_1(t[r].map(O=>u2(B2(t[r-1].entity),O)),t[r-1].triples));break;case 105:this.$=V2([t[r-1]],t[r]);break;case 106:this.$=V2(t[r]);break;case 107:this.$=J3(t[r-1],t[r]);break;case 109:case 237:this.$=L.factory.namedNode(V0);break;case 110:case 118:this.$=n1(t[r-1],t[r]);break;case 111:this.$=t[r]?{annotation:t[r],object:t[r-1]}:t[r-1];break;case 113:this.$=t[r]?re(_1(t[r].map(O=>u2(B2(t[r-1].entity),O)),t[r-1].triples)):t[r-1].triples;break;case 114:this.$=J3(...t[r-1],t[r]);break;case 116:this.$=J3(...t[r]);break;case 117:case 159:case 163:this.$=[t[r-1],t[r]];break;case 119:this.$=t[r]?{object:t[r-1],annotation:t[r]}:t[r-1];break;case 120:this.$=t[r-1].length?D1("|",n1(t[r-1],t[r])):t[r];break;case 121:this.$=t[r-1].length?D1("/",n1(t[r-1],t[r])):t[r];break;case 122:this.$=t[r]?D1(t[r],[t[r-1]]):t[r-1];break;case 123:this.$=t[r-1]?D1(t[r-1],[t[r]]):t[r];break;case 125:case 131:this.$=D1(t[r-1],[t[r]]);break;case 129:this.$=D1("|",n1(t[r-2],t[r-1]));break;case 132:case 134:this.$=x0(t[r-1]);break;case 133:case 135:this.$=G0(t[r-1]);break;case 140:this.$={entity:t[r],triples:[]};break;case 145:this.$=Y3(t[r]);break;case 149:this.$=L.factory.namedNode(qe);break;case 151:case 153:case 158:case 162:this.$=z3(t[r-1],t[r]);break;case 152:this.$=["||",t[r]];break;case 154:this.$=["&&",t[r]];break;case 156:this.$=y2(t[r-1],[t[r-2],t[r]]);break;case 157:this.$=y2(t[r-2]?"notin":"in",[t[r-3],t[r]]);break;case 160:this.$=["+",z3(t[r-1],t[r])];break;case 161:var D3=k2(t[r-1].value.replace("-",""),t[r-1].datatype);this.$=["-",z3(D3,t[r])];break;case 164:this.$=y2("UPLUS",[t[r]]);break;case 165:this.$=y2(t[r-1],[t[r]]);break;case 166:this.$=y2("UMINUS",[t[r]]);break;case 177:this.$=y2(_2(t[r-1]));break;case 178:this.$=y2(_2(t[r-3]),[t[r-1]]);break;case 179:this.$=K1(y2(_2(t[r-3]),[t[r-1]]));break;case 180:this.$=y2(_2(t[r-5]),[t[r-3],t[r-1]]);break;case 181:this.$=y2(_2(t[r-7]),[t[r-5],t[r-3],t[r-1]]);break;case 182:this.$=K1(y2(_2(t[r-7]),[t[r-5],t[r-3],t[r-1]]));break;case 183:this.$=y2(_2(t[r-1]),t[r]);break;case 184:this.$=y2("bound",[Y3(t[r-1])]);break;case 185:this.$=y2(t[r-1],[]);break;case 186:this.$=y2(t[r-3],[t[r-1]]);break;case 187:this.$=y2(t[r-2]?"notexists":"exists",[q3(t[r])]);break;case 188:case 189:this.$=T1(t[r-1],{type:"aggregate",aggregation:_2(t[r-4]),distinct:!!t[r-2]});break;case 190:this.$=T1(t[r-2],{type:"aggregate",aggregation:_2(t[r-5]),distinct:!!t[r-3],separator:typeof t[r-1]=="string"?t[r-1]:" "});break;case 192:this.$=k2(t[r]);break;case 193:this.$=O0(t[r-1],_2(t[r].substr(1)));break;case 194:this.$=k2(t[r-2],t[r]);break;case 195:case 204:this.$=k2(t[r],Ze);break;case 196:case 205:this.$=k2(t[r],Ke);break;case 197:case 206:this.$=k2(_2(t[r]),Je);break;case 200:this.$=k2(t[r].toLowerCase(),R0);break;case 201:this.$=k2(t[r].substr(1),Ze);break;case 202:this.$=k2(t[r].substr(1),Ke);break;case 203:this.$=k2(t[r].substr(1).toLowerCase(),Je);break;case 207:case 208:this.$=r0(t[r],1);break;case 209:case 210:this.$=r0(t[r],3);break;case 211:this.$=L.factory.namedNode(q1(t[r]));break;case 213:var A3=t[r].indexOf(":"),o2=t[r].substr(0,A3),v2=L.prefixes[o2];if(!v2)throw new Error("Unknown prefix: "+o2);var o1=q1(v2+t[r].substr(A3+1));this.$=L.factory.namedNode(o1);break;case 214:if(t[r]=t[r].substr(0,t[r].length-1),!(t[r]in L.prefixes))throw new Error("Unknown prefix: "+t[r]);var o1=q1(L.prefixes[t[r]]);this.$=L.factory.namedNode(o1);break;case 215:this.$=Z1(t[r].replace(/^(_:)/,""));break;case 216:this.$=Z1();break;case 217:case 218:case 232:this.$=K1(Z3(t[r-3],t[r-2],t[r-1]));break;case 230:case 231:this.$=K1(t[r-1]);break;case 248:case 250:case 252:case 254:case 256:case 260:case 264:case 268:case 270:case 292:case 294:case 296:case 298:case 300:case 302:case 304:case 306:case 329:case 342:case 356:case 368:case 370:case 372:case 374:case 392:case 402:case 425:case 427:case 429:case 431:case 441:case 445:case 447:case 449:t[r-1].push(t[r]);break;case 259:case 269:case 291:case 293:case 295:case 301:case 305:case 371:case 424:case 426:this.$=[t[r]];break;case 308:t[r-3].push(t[r-2]);break;case 350:case 362:case 376:case 380:case 382:case 386:case 396:case 406:case 410:case 412:case 421:t[r-2].push(t[r-1]);break}},"anonymous"),table:[e(s,o,{3:1,4:2,10:3}),{1:[3]},e(E,[2,307],{5:4,7:5,321:6,214:7,8:8,96:9,215:10,17:11,21:12,97:16,38:17,6:[2,238],13:y,16:y,45:y,197:y,224:y,229:y,308:y,24:[1,13],32:[1,14],36:[1,15],41:e2}),e([6,13,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],[2,3],{322:19,11:20,14:21,12:[1,22],15:[1,23]}),{6:[1,24]},{6:[2,240]},{6:[2,241]},{6:[2,242]},{6:[2,243],9:25,84:26,85:E2},{6:[2,239]},e(I2,[2,411],{216:28,217:29}),e(T2,[2,249],{18:30}),e(T2,[2,251],{22:31}),e(Z2,[2,255],{25:32,27:33,29:[1,34]}),{13:c,16:l,33:35,39:[1,37],44:39,55:40,87:f,139:38,307:43,308:p,323:36},e(T2,[2,267],{37:46}),e(w3,[2,326],{98:47,103:49,106:50,117:55,130:61,100:[1,48],110:[1,51],113:[1,52],115:[1,53],116:[1,54],131:[1,62],329:[1,56],330:[1,57],331:[1,58],332:[1,59],333:[1,60]}),{39:[1,63],40:64,43:65,44:66,45:pe,87:f},e(G1,[2,273],{42:68,324:69,325:[1,70],326:[1,71]}),e(s,[2,248]),e(s,[2,245]),e(s,[2,246]),{13:[1,72]},{16:[1,73]},{1:[2,1]},{6:[2,2]},{6:[2,244]},{45:[1,77],85:[1,78],86:74,87:[1,75],89:[1,76]},e([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],[2,120],{337:[1,79]}),e(he,[2,418],{218:80,222:81,229:[1,82]}),{19:83,28:K2,29:J2,52:84,53:p1,56:85},{19:88,28:K2,29:J2,52:89,53:p1,56:85},e(T2,[2,253],{26:90}),{28:[1,91],52:92,53:p1},e(p2,[2,385],{181:93,182:94,183:95,31:[2,383]}),e(U1,[2,263],{34:96}),e(U1,[2,261],{44:39,55:40,307:43,139:97,13:c,16:l,87:f,308:p}),e(U1,[2,262]),e(fe,[2,259]),e(ye,[2,143]),e(ye,[2,144]),e([6,13,16,28,29,31,39,45,47,48,53,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,145]),e(t3,[2,211]),e(t3,[2,212]),e(t3,[2,213]),e(t3,[2,214]),{19:98,28:K2,29:J2,52:99,53:p1,56:85},{6:[2,309],99:100,193:[1,101]},e(O2,[2,311],{101:102,328:[1,103]}),e(Fe,[2,317],{104:104,328:[1,105]}),e(de,[2,322],{107:106,328:[1,107]}),{111:108,112:[2,324],328:[1,109]},{29:B1,114:110},{29:B1,114:112},{29:B1,114:113},{118:114,123:[1,115],125:116,126:Ee},e(be,[2,315]),e(be,[2,316]),e(P3,[2,319]),e(P3,[2,320]),e(P3,[2,321]),e(w3,[2,327]),{13:c,16:l,55:118,307:43,308:p},e(T2,[2,12]),e(T2,[2,13],{44:66,43:119,45:pe,87:f}),e(r3,[2,269]),e(r3,[2,15]),{13:c,16:l,44:136,45:w,46:120,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(G1,[2,14]),e(G1,[2,274]),e(G1,[2,271]),e(G1,[2,272]),e(s,[2,4]),{13:[1,177]},e(C2,[2,39]),{29:[1,178]},{29:[1,179]},{87:[1,181],91:180},{45:[1,187],87:[1,185],89:[1,186],93:182,165:183,166:184},e(I2,[2,410]),e([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337],[2,121],{338:[1,188]}),{13:c,16:l,45:[1,193],55:194,197:j1,219:189,220:190,223:191,224:[1,192],307:43,308:p},e(he,[2,419]),e(M1,x3,{20:196,59:197,69:198,70:G3}),e(T2,[2,250]),{29:Q2,57:200},e(O2,[2,279],{54:202,327:[1,203]}),{29:[2,282]},e(H2,h1,{23:204,58:205,62:206,63:f1}),e(T2,[2,252]),{19:208,28:K2,29:J2,52:209,53:p1,56:85},{29:[1,210]},e(Z2,[2,256]),{31:[1,211]},{31:[2,384]},{13:c,16:l,44:215,45:Q1,55:220,82:m,87:f,89:L2,145:212,172:221,185:213,187:214,231:H1,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(_e,[2,265],{56:85,35:227,52:228,19:229,28:K2,29:J2,53:p1}),e(fe,[2,260]),e(H2,h1,{58:205,62:206,23:230,63:f1}),e(T2,[2,268]),{6:[2,45]},e(s,o,{10:3,4:231}),{13:c,16:l,55:232,307:43,308:p},e(O2,[2,312]),{105:233,112:Te,122:234,132:[1,237],134:235,327:[1,238],334:[1,239]},e(Fe,[2,318]),e(O2,De,{108:240,133:242,112:Ae,132:ge}),e(de,[2,323]),{112:[1,244]},{112:[2,325]},e(f2,[2,50]),e(p2,s3,{135:245,136:246,143:247,144:248,31:Ne,112:Ne}),e(f2,[2,51]),e(f2,[2,52]),e(W2,[2,328],{119:249}),{29:B1,114:250},e(W2,[2,56]),{29:B1,114:251},e(w3,[2,59]),e(r3,[2,270]),{47:[1,252]},e(Se,[2,150]),e(a3,[2,428],{240:253}),e(y1,[2,430],{244:254}),e(y1,[2,155],{248:255,249:256,250:[2,438],290:[1,257],341:[1,258],342:[1,259],343:[1,260],344:[1,261],345:[1,262],346:[1,263]}),e(F1,[2,440],{252:264}),e(h2,[2,448],{260:265}),{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,255:154,257:155,264:266,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,255:154,257:155,264:267,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,255:154,257:155,264:268,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(h2,[2,167]),e(h2,[2,168]),e(h2,[2,169]),e(h2,[2,170],{176:269,45:Ie,89:Ce}),e(h2,[2,171]),e(h2,[2,172]),e(h2,[2,173]),e(h2,[2,174]),{13:c,16:l,44:136,45:w,46:272,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(c2,[2,176]),{89:[1,273]},{45:[1,274]},{45:[1,275]},{45:[1,276]},{45:[1,277]},{45:[1,278]},{45:me,89:Ve,179:279},{45:[1,282]},{45:[1,284],89:[1,283]},{279:[1,285]},e(b2,[2,192],{292:[1,286],293:[1,287]}),e(b2,[2,195]),e(b2,[2,196]),e(b2,[2,197]),e(b2,[2,198]),e(b2,[2,199]),e(b2,[2,200]),{13:c,16:l,44:39,55:40,82:m,87:f,139:289,172:291,255:154,257:155,266:290,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,320:288},{45:[1,292]},{45:[1,293]},{45:[1,294]},e(W1,[2,452]),e(W1,[2,453]),e(W1,[2,454]),e(W1,[2,455]),e(W1,[2,456]),{279:[2,458]},e(i3,[2,207]),e(i3,[2,208]),e(i3,[2,209]),e(i3,[2,210]),e(b2,[2,201]),e(b2,[2,202]),e(b2,[2,203]),e(b2,[2,204]),e(b2,[2,205]),e(b2,[2,206]),e(s,[2,5]),e(n3,[2,297],{88:295}),e(u3,[2,299],{90:296}),{48:[1,297],87:[1,298]},e(o3,[2,301]),e(C2,[2,43]),e(C2,[2,82]),e(C2,[2,83]),{29:[1,299]},{29:[1,300]},{87:[1,302],169:301},e(I2,[2,412]),e($2,[2,123]),e($2,[2,416],{221:303,339:304,39:[1,306],263:[1,307],340:[1,305]}),e(m2,[2,124]),{13:c,16:l,45:[1,311],55:194,89:[1,310],197:j1,223:312,225:308,226:309,229:ke,307:43,308:p},e(I2,y,{215:10,214:314}),e(m2,[2,236]),e(m2,[2,237]),e(d1,[2,6]),e(U3,[2,287],{60:315,72:316,73:[1,317]}),e(M1,[2,286]),{13:c,16:l,45:w,55:323,67:321,68:322,71:318,77:320,79:319,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,307:43,308:p,346:z,347:q,348:Z,349:K,350:J,351:$},e([6,31,63,70,73,81,83,85],[2,20]),e(p2,ve,{38:17,49:324,147:325,17:326,21:327,148:328,154:329,155:330,29:w2,31:w2,85:w2,112:w2,159:w2,160:w2,161:w2,163:w2,164:w2,41:e2}),{13:c,16:l,55:331,307:43,308:p},e(O2,[2,280]),e(d1,[2,7]),e(M1,x3,{59:197,69:198,20:332,70:G3}),e(H2,[2,284]),{64:[1,333]},e(H2,h1,{58:205,62:206,23:334,63:f1}),e(T2,[2,254]),e(p2,s3,{144:248,30:335,143:336,31:[2,257]}),e(T2,[2,100]),{31:[2,387],184:337,335:[1,338]},{13:c,16:l,44:39,55:40,87:f,139:342,186:339,190:340,195:341,197:e1,307:43,308:p},e(X1,[2,389],{44:39,55:40,307:43,190:340,195:341,139:342,188:344,189:345,186:346,13:c,16:l,87:f,197:e1,308:p}),e(P2,[2,227]),e(P2,[2,228]),e(P2,[2,229]),{13:c,16:l,44:215,45:Q1,55:220,82:m,87:f,89:L2,172:221,185:351,187:350,200:348,230:347,231:H1,234:349,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},{13:c,16:l,44:39,55:40,87:f,139:342,186:352,190:340,195:341,197:e1,307:43,308:p},e(P2,[2,146]),e(P2,[2,147]),e(P2,[2,148]),e(P2,[2,149]),{13:c,16:l,44:354,55:355,82:m,87:f,172:357,237:356,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:358,312:A2,313:353},e(B3,[2,215]),e(B3,[2,216]),e(H2,h1,{58:205,62:206,23:359,63:f1}),e(U1,[2,264]),e(_e,[2,266]),e(d1,[2,11]),e(E,[2,308],{6:[2,310]}),e(f2,[2,313],{102:360,120:361,121:[1,362]}),e(f2,[2,47]),e(f2,[2,63]),e(f2,[2,64]),{13:c,16:l,55:363,307:43,308:p},e(f2,[2,336]),e(f2,[2,337]),e(f2,[2,338]),{109:[1,364]},e(Re,[2,60]),{13:c,16:l,55:365,307:43,308:p},e(O2,[2,335]),{13:c,16:l,55:366,307:43,308:p},{31:[1,367]},e(t1,[2,341],{137:368}),e(t1,[2,340]),{13:c,16:l,44:215,45:Q1,55:220,82:m,87:f,89:L2,145:369,172:221,185:213,187:214,231:H1,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},{28:[1,370],127:371,128:[1,372]},e(W2,[2,330],{124:373,125:374,126:Ee}),e(W2,[2,57]),{44:375,87:f},e(Se,[2,151],{241:376,242:[1,377]}),e(a3,[2,153],{245:378,246:[1,379]}),{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,247:380,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{250:[1,381]},e(l2,[2,432]),e(l2,[2,433]),e(l2,[2,434]),e(l2,[2,435]),e(l2,[2,436]),e(l2,[2,437]),{250:[2,439]},e([47,48,193,242,246,250,272,290,341,342,343,344,345,346],[2,158],{253:382,254:383,255:384,257:385,263:[1,386],265:[1,387],297:b,298:_,299:T,300:D,301:A,302:g}),e(F1,[2,162],{261:388,262:389,39:j3,338:M3}),e(h2,[2,164]),e(h2,[2,165]),e(h2,[2,166]),e(c2,[2,95]),e(c2,[2,96]),e(l2,[2,377],{177:392,325:[1,393]}),{48:[1,394]},e(c2,[2,177]),{13:c,16:l,44:136,45:w,46:395,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:396,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:397,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:398,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:399,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(c2,[2,183]),e(c2,[2,98]),e(l2,[2,381],{180:400}),{87:[1,401]},e(c2,[2,185]),{13:c,16:l,44:136,45:w,46:402,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{29:Q2,57:403},e(b2,[2,193]),{13:c,16:l,55:404,307:43,308:p},{13:c,16:l,44:39,55:40,87:f,139:342,195:405,197:e1,307:43,308:p},e(X2,[2,233]),e(X2,[2,234]),e(X2,[2,235]),e(Oe,[2,459],{281:406,325:[1,407]}),e(l2,[2,463],{284:408,325:[1,409]}),e(l2,[2,465],{286:410,325:[1,411]}),{13:c,16:l,31:[1,412],55:414,82:m,171:413,172:415,173:416,174:c3,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:l3},{31:[1,419],89:[1,420]},{29:[1,421]},e(o3,[2,302]),e(n3,[2,367],{167:422}),e(u3,[2,369],{168:423}),{48:[1,424],87:[1,425]},e(o3,[2,371]),e($2,[2,122]),e($2,[2,417]),e($2,[2,413]),e($2,[2,414]),e($2,[2,415]),e(m2,[2,125]),e(m2,[2,127]),e(m2,[2,128]),e(Le,[2,420],{227:426}),e(m2,[2,130]),{13:c,16:l,55:194,197:j1,223:427,307:43,308:p},{48:[1,428]},e(Y2,[2,289],{61:429,80:430,81:[1,431],83:[1,432]}),e(U3,[2,288]),{64:[1,433]},e(M1,[2,29],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:434,13:c,16:l,45:w,268:P,269:x,270:G,271:U,273:B,274:j,276:M,277:Q,279:H,280:W,283:X,285:Y,308:p,346:z,347:q,348:Z,349:K,350:J,351:$}),e(we,[2,293]),e(Q3,[2,92]),e(Q3,[2,93]),e(Q3,[2,94]),{45:Ie,89:Ce,176:269},{31:[1,435]},{31:[1,436]},{19:437,28:K2,29:J2,56:85},{19:438,28:K2,29:J2,56:85},e(r1,[2,355],{149:439}),e(r1,[2,354]),{13:c,16:l,44:215,45:p3,55:220,82:m,87:f,89:L2,156:440,172:221,185:441,203:442,231:h3,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(U1,[2,19]),e(Y2,[2,21]),{13:c,16:l,44:450,45:Pe,55:323,65:445,66:446,67:447,68:448,87:f,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,307:43,308:p,346:z,347:q,348:Z,349:K,350:J,351:$},e(d1,[2,8]),{31:[1,451]},{31:[2,258]},{31:[2,101]},e(p2,[2,386],{31:[2,388]}),e(X1,[2,102]),e(s1,[2,391],{191:452}),e(p2,[2,395],{196:453,198:454}),e(p2,[2,108]),e(p2,[2,109]),e(X1,[2,103]),e(X1,[2,104]),e(X1,[2,390]),{13:c,16:l,44:215,45:Q1,48:[1,455],55:220,82:m,87:f,89:L2,172:221,185:351,187:350,200:456,231:H1,234:349,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(f3,[2,424]),e(xe,[2,136]),e(xe,[2,137]),e(H3,[2,140]),{232:[1,457]},{13:c,16:l,44:39,55:40,87:f,139:342,195:458,197:e1,307:43,308:p},e(X2,[2,219]),e(X2,[2,220]),e(X2,[2,221]),e(X2,[2,222]),e(X2,[2,223]),e(d1,[2,10]),e(f2,[2,46]),e(f2,[2,314]),{112:Te,122:459},e(f2,[2,62]),e(O2,De,{133:242,108:460,112:Ae,132:ge}),e(Re,[2,61]),e(f2,[2,49]),e([6,28,126,128,193],[2,65]),{31:[2,66],112:[1,462],138:461},e(t1,[2,351],{146:463,335:[1,464]}),{29:Q2,57:465},e(W2,[2,329]),e(O2,[2,332],{129:466,327:[1,467]}),e(W2,[2,55]),e(W2,[2,331]),{48:[1,468]},e(a3,[2,429]),{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,239:469,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(y1,[2,431]),{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,243:470,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(y1,[2,156]),{45:me,89:Ve,179:471},e(F1,[2,441]),{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,251:472,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(h2,[2,444],{256:473}),e(h2,[2,446],{258:474}),e(l2,[2,442]),e(l2,[2,443]),e(h2,[2,449]),{13:c,16:l,44:136,45:w,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,255:154,257:155,259:475,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(l2,[2,450]),e(l2,[2,451]),e(l2,[2,379],{178:476}),e(l2,[2,378]),e([6,13,16,29,31,39,45,47,48,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,175]),{48:[1,477]},{48:[1,478]},{272:[1,479]},{272:[1,480]},{272:[1,481]},{13:c,16:l,44:136,45:w,46:482,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{48:[1,483]},{48:[1,484]},e(c2,[2,187]),e(b2,[2,194]),{13:c,16:l,44:39,55:40,82:m,87:f,139:289,172:291,255:154,257:155,266:290,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,320:485},{13:c,16:l,39:[1,487],44:136,45:w,46:488,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,282:486,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(Oe,[2,460]),{13:c,16:l,44:136,45:w,46:489,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(l2,[2,464]),{13:c,16:l,44:136,45:w,46:490,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(l2,[2,466]),e(C2,[2,40]),e(n3,[2,298]),e(Y1,[2,87]),e(Y1,[2,88]),e(Y1,[2,89]),e(Y1,[2,90]),{13:c,16:l,55:492,82:m,172:493,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,311:494,312:A2,315:491},e(C2,[2,41]),e(u3,[2,300]),e(z1,[2,303],{92:495}),{13:c,16:l,31:[1,496],55:414,82:m,171:497,172:415,173:416,174:c3,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:l3},{31:[1,498],89:[1,499]},{29:[1,500]},e(o3,[2,372]),{13:c,16:l,48:[2,422],55:194,197:j1,223:312,226:502,228:501,229:ke,307:43,308:p},e(m2,[2,131]),e(m2,[2,126]),e(Y2,[2,22]),e(Y2,[2,290]),{82:[1,503]},{82:[1,504]},{13:c,16:l,44:510,45:w,55:323,67:321,68:322,74:505,75:506,76:Ge,77:320,78:Ue,79:509,87:f,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,307:43,308:p,346:z,347:q,348:Z,349:K,350:J,351:$},e(we,[2,294]),e(Be,[2,69]),e(Be,[2,70]),e(M1,x3,{59:197,69:198,20:511,70:G3}),e(H2,h1,{58:205,62:206,23:512,63:f1}),{29:[2,375],31:[2,71],84:522,85:E2,112:[1,518],150:513,151:514,158:515,159:[1,516],160:[1,517],161:[1,519],163:[1,520],164:[1,521],175:523},e(r1,[2,363],{157:524,335:[1,525]}),e(I2,y,{215:10,202:526,205:527,208:528,214:529,44:530,87:f}),e(y3,[2,399],{215:10,205:527,208:528,214:529,44:530,204:531,202:532,13:y,16:y,45:y,197:y,224:y,229:y,308:y,87:f}),{13:c,16:l,44:215,45:p3,55:220,82:m,87:f,89:L2,172:221,185:351,203:536,212:534,231:h3,233:533,234:535,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(I2,y,{215:10,205:527,208:528,214:529,44:530,202:537,87:f}),e(H2,[2,23],{307:43,267:139,275:146,278:149,55:323,67:447,68:448,44:450,66:538,13:c,16:l,45:Pe,87:f,268:P,269:x,270:G,271:U,273:B,274:j,276:M,277:Q,279:H,280:W,283:X,285:Y,308:p,346:z,347:q,348:Z,349:K,350:J,351:$}),e(a1,[2,291]),e(a1,[2,24]),e(a1,[2,25]),{13:c,16:l,44:136,45:w,46:539,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(a1,[2,28]),e(H2,h1,{58:205,62:206,23:540,63:f1}),e([31,112,232,318,335],[2,105],{192:541,193:[1,542]}),e(s1,[2,107]),{13:c,16:l,44:215,45:Q1,55:220,82:m,87:f,89:L2,172:221,185:351,187:350,199:543,200:544,231:H1,234:349,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(je,[2,132]),e(f3,[2,425]),e(je,[2,133]),{13:c,16:l,44:354,55:355,82:m,87:f,172:357,237:356,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:358,312:A2,313:545},e(f2,[2,54]),e(f2,[2,48]),e(t1,[2,342]),{13:c,16:l,44:39,55:40,87:f,139:546,307:43,308:p},e(t1,[2,68]),e(p2,[2,350],{31:Me,112:Me}),e(f2,[2,53]),{13:c,16:l,55:547,307:43,308:p},e(O2,[2,333]),e(r3,[2,16]),e(a3,[2,152]),e(y1,[2,154]),e(y1,[2,157]),e(F1,[2,159]),e(F1,[2,160],{262:389,261:548,39:j3,338:M3}),e(F1,[2,161],{262:389,261:549,39:j3,338:M3}),e(h2,[2,163]),{13:c,16:l,44:136,45:w,46:550,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(c2,[2,178]),e(c2,[2,179]),{13:c,16:l,44:136,45:w,46:551,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:552,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:553,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{48:[1,554],272:[1,555]},e(c2,[2,184]),e(c2,[2,186]),{314:[1,556]},{48:[1,557]},{48:[2,461]},{48:[2,462]},{48:[1,558]},{48:[2,467],193:[1,561],287:559,288:560},{13:c,16:l,55:194,197:j1,223:562,307:43,308:p},e(W3,[2,224]),e(W3,[2,225]),e(W3,[2,226]),{31:[1,563],45:Qe,94:564},e(C2,[2,84]),e(n3,[2,368]),e(C2,[2,85]),e(u3,[2,370]),e(z1,[2,373],{170:566}),{48:[1,567]},{48:[2,423],337:[1,568]},e(Y2,[2,35],{83:[1,569]}),e(Y2,[2,36],{81:[1,570]}),e(U3,[2,30],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:509,44:510,75:571,13:c,16:l,45:w,76:Ge,78:Ue,87:f,268:P,269:x,270:G,271:U,273:B,274:j,276:M,277:Q,279:H,280:W,283:X,285:Y,308:p,346:z,347:q,348:Z,349:K,350:J,351:$}),e(E1,[2,295]),{45:w,77:572},{45:w,77:573},e(E1,[2,33]),e(E1,[2,34]),{31:[2,275],50:574,84:575,85:E2},{31:[2,277],51:576,84:577,85:E2},e(r1,[2,356]),e(He,[2,357],{152:578,335:[1,579]}),e(x2,[2,74]),{29:Q2,57:580},{29:Q2,57:581},{13:c,16:l,44:39,55:40,87:f,139:582,307:43,308:p},e(We,[2,365],{162:583,328:[1,584]}),{13:c,16:l,45:w,55:323,67:321,68:322,77:320,79:585,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,307:43,308:p,346:z,347:q,348:Z,349:K,350:J,351:$},{45:[1,586]},e(x2,[2,81]),{29:Q2,57:587},e(r1,[2,73]),e(p2,[2,362],{29:G2,31:G2,85:G2,112:G2,159:G2,160:G2,161:G2,163:G2,164:G2}),e(y3,[2,112]),e(b1,[2,401],{206:588}),e(p2,[2,405],{209:589,210:590}),e(p2,[2,403]),e(p2,[2,404]),e(y3,[2,113]),e(y3,[2,400]),{13:c,16:l,44:215,45:p3,48:[1,591],55:220,82:m,87:f,89:L2,172:221,185:351,203:536,212:592,231:h3,234:535,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(f3,[2,426]),e(H3,[2,138]),e(H3,[2,139]),{232:[1,593]},e(a1,[2,292]),{47:[1,595],48:[1,594]},e(d1,[2,9]),e(s1,[2,392]),e(s1,[2,393],{44:39,55:40,307:43,195:341,139:342,194:596,190:597,13:c,16:l,87:f,197:e1,308:p}),e(s1,[2,110],{272:[1,598]}),e(F3,[2,397],{201:599,316:600,317:[1,601]}),{314:[1,602]},{29:[1,603]},e(W2,[2,58]),e(h2,[2,445]),e(h2,[2,447]),{48:[1,604],272:[1,605]},{48:[1,606]},{272:[1,607]},{272:[1,608]},e(c2,[2,99]),e(l2,[2,382]),e([13,16,39,47,48,87,193,197,242,246,250,263,265,272,290,297,298,299,300,301,302,308,314,338,341,342,343,344,345,346],[2,232]),e(c2,[2,188]),e(c2,[2,189]),{48:[1,609]},{48:[2,468]},{289:[1,610]},{13:c,16:l,55:492,82:m,172:493,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,311:494,312:A2,315:611},e(C2,[2,42]),e(z1,[2,304]),{13:c,16:l,55:414,82:m,95:612,171:613,172:415,173:416,174:c3,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:l3},{31:[1,614],45:Qe,94:615},e(m2,[2,129]),e(Le,[2,421]),{82:[1,616]},{82:[1,617]},e(E1,[2,296]),e(E1,[2,31]),e(E1,[2,32]),{31:[2,17]},{31:[2,276]},{31:[2,18]},{31:[2,278]},e(p2,ve,{155:330,153:618,154:619,29:U2,31:U2,85:U2,112:U2,159:U2,160:U2,161:U2,163:U2,164:U2}),e(He,[2,358]),e(x2,[2,75]),e(x2,[2,76]),{29:Q2,57:620},{13:c,16:l,44:39,55:40,87:f,139:621,307:43,308:p},e(We,[2,366]),e(x2,[2,79]),{13:c,16:l,44:136,45:w,46:622,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(x2,[2,91],{336:[1,623]}),e([29,31,85,112,159,160,161,163,164,232,318,335],[2,114],{207:624,193:[1,625]}),e(b1,[2,117]),{13:c,16:l,44:215,45:p3,55:220,82:m,87:f,89:L2,172:221,185:351,203:536,211:626,212:627,231:h3,234:535,236:216,237:222,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,309:N2,310:S2,311:217,312:A2},e(P2,[2,134]),e(f3,[2,427]),e(P2,[2,135]),e(a1,[2,26]),{44:628,87:f},e(s1,[2,106]),e(s1,[2,394]),e(p2,[2,396]),e(F3,[2,111]),e(F3,[2,398]),{13:c,16:l,44:39,55:40,87:f,139:342,186:629,190:340,195:341,197:e1,307:43,308:p},e(B3,[2,217]),e(p2,s3,{144:248,140:630,143:631,31:[2,343]}),e(c2,[2,97]),e(l2,[2,380]),e(c2,[2,180]),{13:c,16:l,44:136,45:w,46:632,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},{13:c,16:l,44:136,45:w,46:633,55:133,67:132,68:134,77:131,82:m,87:f,172:135,224:a2,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:i2,264:130,265:n2,266:137,267:139,268:P,269:x,270:G,271:U,273:B,274:j,275:146,276:M,277:Q,278:149,279:H,280:W,283:X,285:Y,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:t2,346:z,347:q,348:Z,349:K,350:J,351:$},e(c2,[2,190]),{290:[1,634]},{314:[1,635]},{13:c,16:l,48:[1,636],55:414,82:m,171:637,172:415,173:416,174:c3,255:154,257:155,291:150,294:V,295:k,296:v,297:b,298:_,299:T,300:D,301:A,302:g,303:N,304:S,305:I,306:C,307:43,308:p,312:l3},e(Xe,[2,305]),e(C2,[2,86]),e(z1,[2,374]),e(Y2,[2,37]),e(Y2,[2,38]),e(r1,[2,72]),e(r1,[2,360]),e(x2,[2,77]),{29:Q2,57:638},{47:[1,639]},{29:[2,376]},e(b1,[2,402]),e(b1,[2,115],{215:10,208:528,214:529,44:530,205:640,13:y,16:y,45:y,197:y,224:y,229:y,308:y,87:f}),e(b1,[2,118],{272:[1,641]}),e(d3,[2,407],{213:642,319:643,317:[1,644]}),{48:[1,645]},{318:[1,646]},{31:[1,647]},{31:[2,344]},{48:[1,648]},{48:[1,649]},{291:650,303:N,304:S,305:I,306:C},e(Y1,[2,218]),e(z1,[2,44]),e(Xe,[2,306]),e(x2,[2,78]),{44:651,87:f},e(b1,[2,116]),e(p2,[2,406]),e(d3,[2,119]),e(d3,[2,408]),e(I2,y,{215:10,205:527,208:528,214:529,44:530,202:652,87:f}),e(a1,[2,27]),e(F3,[2,230]),e(Ye,[2,345],{141:653,335:[1,654]}),e(c2,[2,181]),e(c2,[2,182]),{48:[2,191]},{48:[1,655]},{318:[1,656]},e(p2,s3,{144:248,142:657,143:658,31:ze,112:ze}),e(Ye,[2,346]),e(x2,[2,80]),e(d3,[2,231]),e(t1,[2,67]),e(t1,[2,348])],defaultActions:{5:[2,240],6:[2,241],7:[2,242],9:[2,239],24:[2,1],25:[2,2],26:[2,244],87:[2,282],94:[2,384],100:[2,45],109:[2,325],166:[2,458],263:[2,439],336:[2,258],337:[2,101],487:[2,461],488:[2,462],560:[2,468],574:[2,17],575:[2,276],576:[2,18],577:[2,278],623:[2,376],631:[2,344],650:[2,191]},parseError:h(function(a,n){if(n.recoverable)this.trace(a);else{var u=new Error(a);throw u.hash=n,u}},"parseError"),parse:h(function(a){var n=this,u=[0],F=[null],d=[],t=this.table,g2="",r=0,z2=0,T3=2,D3=1,A3=d.slice.call(arguments,1),o2=Object.create(this.lexer),v2={yy:{}};for(var o1 in this.yy)Object.prototype.hasOwnProperty.call(this.yy,o1)&&(v2.yy[o1]=this.yy[o1]);o2.setInput(a,v2.yy),v2.yy.lexer=o2,v2.yy.parser=this,typeof o2.yylloc>"u"&&(o2.yylloc={});var N1=o2.yylloc;d.push(N1);var ae=o2.options&&o2.options.ranges;typeof v2.yy.parseError=="function"?this.parseError=v2.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var g3=h(function(){var S1;return S1=o2.lex()||D3,typeof S1!="number"&&(S1=n.symbols_[S1]||S1),S1},"lex"),O,r2,R,F2,d2={},N3,j2,n0,S3;;){if(r2=u[u.length-1],this.defaultActions[r2]?R=this.defaultActions[r2]:((O===null||typeof O>"u")&&(O=g3()),R=t[r2]&&t[r2][O]),typeof R>"u"||!R.length||!R[0]){var ie="";S3=[];for(N3 in t[r2])this.terminals_[N3]&&N3>T3&&S3.push("'"+this.terminals_[N3]+"'");o2.showPosition?ie="Parse error on line "+(r+1)+`:
`+o2.showPosition()+`
Expecting `+S3.join(", ")+", got '"+(this.terminals_[O]||O)+"'":ie="Parse error on line "+(r+1)+": Unexpected "+(O==D3?"end of input":"'"+(this.terminals_[O]||O)+"'"),this.parseError(ie,{text:o2.match,token:this.terminals_[O]||O,line:o2.yylineno,loc:N1,expected:S3})}if(R[0]instanceof Array&&R.length>1)throw new Error("Parse Error: multiple actions possible at state: "+r2+", token: "+O);switch(R[0]){case 1:u.push(O),F.push(o2.yytext),d.push(o2.yylloc),u.push(R[1]),O=null,z2=o2.yyleng,g2=o2.yytext,r=o2.yylineno,N1=o2.yylloc;break;case 2:if(j2=this.productions_[R[1]][1],d2.$=F[F.length-j2],d2._$={first_line:d[d.length-(j2||1)].first_line,last_line:d[d.length-1].last_line,first_column:d[d.length-(j2||1)].first_column,last_column:d[d.length-1].last_column},ae&&(d2._$.range=[d[d.length-(j2||1)].range[0],d[d.length-1].range[1]]),F2=this.performAction.apply(d2,[g2,z2,r,v2.yy,R[1],F,d].concat(A3)),typeof F2<"u")return F2;j2&&(u=u.slice(0,-1*j2*2),F=F.slice(0,-1*j2),d=d.slice(0,-1*j2)),u.push(this.productions_[R[1]][0]),F.push(d2.$),d.push(d2._$),n0=t[u[u.length-2]][u[u.length-1]],u.push(n0);break;case 3:return!0}}return!0},"parse")},E3=I1.Wildcard,b3="http://www.w3.org/1999/02/22-rdf-syntax-ns#",V0=b3+"type",k0=b3+"first",v0=b3+"rest",qe=b3+"nil",_3="http://www.w3.org/2001/XMLSchema#",Ze=_3+"integer",Ke=_3+"decimal",Je=_3+"double",R0=_3+"boolean",i1="",$e="",e0="";function _2(i){return i.toLowerCase()}h(_2,"lowercase");function n1(i,a){return i.push(a),i}h(n1,"appendTo");function _1(i,a){return i.push.apply(i,a),i}h(_1,"appendAllTo");function u2(i){i||(i={});for(var a=1,n=arguments.length,u;a<n&&(u=arguments[a]||{});a++)for(var F in u)i[F]=u[F];return i}h(u2,"extend");function V2(){for(var i=[],a=0,n=arguments.length;a<n;a++)i=i.concat.apply(i,arguments[a]);return i}h(V2,"unionAll");function q1(i){if(i[0]==="<"&&(i=i.substring(1,i.length-1)),/^[a-z]+:/i.test(i))return i;if(!L.base)throw new Error("Cannot resolve relative IRI "+i+" because no base IRI was set.");switch(i1!==L.base&&(i1=L.base,$e=i1.replace(/[^\/:]*$/,""),e0=i1.match(/^(?:[a-z]+:\/*)?[^\/]*/)[0]),i[0]){case void 0:return i1;case"#":return i1+i;case"?":return i1.replace(/(?:\?.*)?$/,i);case"/":return e0+i;default:return $e+i}}h(q1,"resolveIRI");function Y3(i){if(i){var a=i[0];if(a==="?"||a==="$")return L.factory.variable(i.substr(1))}return i}h(Y3,"toVar");function y2(i,a){return{type:"operation",operator:i,args:a||[]}}h(y2,"operation");function T1(i,a){var n={expression:i==="*"?new E3:i};if(a)for(var u in a)n[u]=a[u];return n}h(T1,"expression");function D1(i,a){return{type:"path",pathType:i,items:a}}h(D1,"path");function z3(i,a){for(var n=0,u=a.length,F;n<u&&(F=a[n]);n++)i=y2(F[0],[i,F[1]]);return i}h(z3,"createOperationTree");function u1(i,a){var n=[],u=[],F=i.length,d,t={};if(!F)return null;for(var g2=0;g2<F&&(d=i[g2]);g2++)(d.named?u:n).push(d.iri);return t[a||"from"]={default:n,named:u},t}h(u1,"groupDatasets");function A1(i){return parseInt(i,10)}h(A1,"toInt");function q3(i){return i.type==="group"&&i.patterns.length===1?i.patterns[0]:i}h(q3,"degroupSingle");function k2(i,a){return a&&a.termType!=="NamedNode"&&(a=L.factory.namedNode(a)),L.factory.literal(i,a)}h(k2,"createTypedLiteral");function O0(i,a){return L.factory.literal(i,a)}h(O0,"createLangLiteral");function Z3(i,a,n){if(!("termType"in a))throw new Error("Nested triples cannot contain paths");return L.factory.quad(i,a,n)}h(Z3,"nestedTriple");function B2(i,a,n,u){var F={};return i!=null&&(F.subject=i),a!=null&&(F.predicate=a),n!=null&&(F.object=n),u!=null&&(F.annotations=u),F}h(B2,"triple");function Z1(i){return typeof i=="string"?i.startsWith("e_")?L.factory.blankNode(i):L.factory.blankNode("e_"+i):L.factory.blankNode("g_"+t0++)}h(Z1,"blank");var t0=0;L._resetBlanks=function(){t0=0};var L0=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g,w0={"\\":"\\","'":"'",'"':'"',t:"	",b:"\b",n:`
`,r:"\r",f:"\f"},P0=/[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/,K3=String.fromCharCode;function r0(i,a){i=i.substring(a,i.length-a);try{i=i.replace(L0,function(n,u,F,d){var t;if(u){if(t=parseInt(u,16),isNaN(t))throw new Error;return K3(t)}else if(F){if(t=parseInt(F,16),isNaN(t))throw new Error;return t<65535?K3(t):K3(55296+((t-=65536)>>10),56320+(t&1023))}else{var g2=w0[d];if(!g2)throw new Error;return g2}})}catch{return""}if(P0.exec(i))throw new Error("Invalid unicode codepoint of surrogate pair without corresponding codepoint in "+i);return i}h(r0,"unescapeString");function x0(i){var a=Z1(),n=a,u=[],F,d=[];i.forEach(function(z2){u.push(z2.entity),_1(d,z2.triples)});for(var t=0,g2=0,r=u.length,F=Array(r*2);t<r;)F[g2++]=B2(n,L.factory.namedNode(k0),u[t]),F[g2++]=B2(n,L.factory.namedNode(v0),n=++t<r?Z1():L.factory.namedNode(qe));return{entity:a,triples:_1(F,d)}}h(x0,"createList");function G0(i){var a=Z1();return{entity:a,triples:i.map(function(n){return u2(B2(a),n)})}}h(G0,"createAnonymousObject");function J3(i,a,n){var u=[],F=[];return a.forEach(function(d){let t=null;d.annotation&&(t=d.annotation,d=d.object),u.push(B2(null,i,d.entity,t)),_1(F,d.triples)}),V2(u,n||[],F)}h(J3,"objectListToTriples");function g1(i){return i.variable?i.variable.value:i.value||i.expression.value}h(g1,"getExpressionId");function $3(i){if(!i)return[];if(i.type==="aggregate")return[i];if(i.type==="operation"){const a=[];for(const n of i.args)a.push(...$3(n));return a}return[]}h($3,"getAggregatesOfExpression");function U0(i){const a=new Set,n=h(function(u){u&&(u.termType==="Variable"?a.add(u):u.type==="operation"&&u.args.forEach(n))},"visitExpression");return n(i),a}h(U0,"getVariablesFromExpression");function ee(i,a=1,n=[]){for(const u of i)a>0&&u instanceof Array?ee(u,a-1,n):n.push(u);return n}h(ee,"flatten");function te(i){return i.termType==="Variable"}h(te,"isVariable");function s0(i){if(i.triples){const a=[];for(const n of i.triples)te(n.subject)&&a.push(n.subject.value),te(n.predicate)&&a.push(n.predicate.value),te(n.object)&&a.push(n.object.value);return a}else if(i.patterns){const a=[];for(const n of i.patterns)a.push(...s0(n));return a}return[]}h(s0,"getBoundVarsFromGroupGraphPattern");function B0(i){const a=i.slice().sort(),n=[];for(let u=0;u<a.length-1;u++)a[u+1]==a[u]&&n.push(a[u]);return n}h(B0,"getDuplicatesInArray");function K1(i){if(!L.sparqlStar)throw new Error("SPARQL-star support is not enabled");return i}h(K1,"ensureSparqlStar");function a0(i,a,n){for(const u of a){const F=B2("subject"in u?u.subject:i,u.predicate,u.object);n.push(F),u.annotations&&a0(Z3(i,u.predicate,u.object),u.annotations,n)}}h(a0,"_applyAnnotations");function re(i){if(L.sparqlStar){const a=[];return i.forEach(n=>{const u=B2(n.subject,n.predicate,n.object);a.push(u),n.annotations&&a0(Z3(n.subject,n.predicate,n.object),n.annotations,a)}),a}return i}h(re,"applyAnnotations");function i0(i){for(const a of i){if(a.type==="graph"&&a.name.termType==="Variable")throw new Error("Detected illegal variable in GRAPH");if(a.type==="bgp"||a.type==="graph"){for(const n of a.triples)if(n.subject.termType==="Variable"||n.predicate.termType==="Variable"||n.object.termType==="Variable")throw new Error("Detected illegal variable in BGP")}}return i}h(i0,"ensureNoVariables");function se(i){for(const a of i)if(a.type==="bgp"){for(const n of a.triples)if(n.subject.termType==="BlankNode"||n.predicate.termType==="BlankNode"||n.object.termType==="BlankNode")throw new Error("Detected illegal blank node in BGP")}return i}h(se,"ensureNoBnodes");var j0=function(){var i={EOF:1,parseError:h(function(n,u){if(this.yy.parser)this.yy.parser.parseError(n,u);else throw new Error(n)},"parseError"),setInput:function(a,n){return this.yy=n||this.yy||{},this._input=a,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var a=this._input[0];this.yytext+=a,this.yyleng++,this.offset++,this.match+=a,this.matched+=a;var n=a.match(/(?:\r\n?|\n).*/g);return n?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),a},unput:function(a){var n=a.length,u=a.split(/(?:\r\n?|\n)/g);this._input=a+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-n),this.offset-=n;var F=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),u.length-1&&(this.yylineno-=u.length-1);var d=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:u?(u.length===F.length?this.yylloc.first_column:0)+F[F.length-u.length].length-u[0].length:this.yylloc.first_column-n},this.options.ranges&&(this.yylloc.range=[d[0],d[0]+this.yyleng-n]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(a){this.unput(this.match.slice(a))},pastInput:function(){var a=this.matched.substr(0,this.matched.length-this.match.length);return(a.length>20?"...":"")+a.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var a=this.match;return a.length<20&&(a+=this._input.substr(0,20-a.length)),(a.substr(0,20)+(a.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var a=this.pastInput(),n=new Array(a.length+1).join("-");return a+this.upcomingInput()+`
`+n+"^"},test_match:function(a,n){var u,F,d;if(this.options.backtrack_lexer&&(d={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(d.yylloc.range=this.yylloc.range.slice(0))),F=a[0].match(/(?:\r\n?|\n).*/g),F&&(this.yylineno+=F.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:F?F[F.length-1].length-F[F.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+a[0].length},this.yytext+=a[0],this.match+=a[0],this.matches=a,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(a[0].length),this.matched+=a[0],u=this.performAction.call(this,this.yy,this,n,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),u)return u;if(this._backtrack){for(var t in d)this[t]=d[t];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var a,n,u,F;this._more||(this.yytext="",this.match="");for(var d=this._currentRules(),t=0;t<d.length;t++)if(u=this._input.match(this.rules[d[t]]),u&&(!n||u[0].length>n[0].length)){if(n=u,F=t,this.options.backtrack_lexer){if(a=this.test_match(u,d[t]),a!==!1)return a;if(this._backtrack){n=!1;continue}else return!1}else if(!this.options.flex)break}return n?(a=this.test_match(n,d[F]),a!==!1?a:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:h(function(){var n=this.next();return n||this.lex()},"lex"),begin:h(function(n){this.conditionStack.push(n)},"begin"),popState:h(function(){var n=this.conditionStack.length-1;return n>0?this.conditionStack.pop():this.conditionStack[0]},"popState"),_currentRules:h(function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},"_currentRules"),topState:h(function(n){return n=this.conditionStack.length-1-Math.abs(n||0),n>=0?this.conditionStack[n]:"INITIAL"},"topState"),pushState:h(function(n){this.begin(n)},"pushState"),stateStackSize:h(function(){return this.conditionStack.length},"stateStackSize"),options:{flex:!0,"case-insensitive":!0},performAction:h(function(n,u,F,d){switch(F){case 0:break;case 1:return 12;case 2:return 15;case 3:return 41;case 4:return 325;case 5:return 326;case 6:return 45;case 7:return 47;case 8:return 48;case 9:return 39;case 10:return 24;case 11:return 28;case 12:return 29;case 13:return 31;case 14:return 32;case 15:return 36;case 16:return 53;case 17:return 327;case 18:return 63;case 19:return 64;case 20:return 70;case 21:return 73;case 22:return 76;case 23:return 78;case 24:return 81;case 25:return 83;case 26:return 85;case 27:return 193;case 28:return 100;case 29:return 328;case 30:return 121;case 31:return 329;case 32:return 330;case 33:return 110;case 34:return 331;case 35:return 109;case 36:return 332;case 37:return 333;case 38:return 113;case 39:return 115;case 40:return 116;case 41:return 131;case 42:return 123;case 43:return 126;case 44:return 128;case 45:return 132;case 46:return 112;case 47:return 334;case 48:return 335;case 49:return 159;case 50:return 161;case 51:return 164;case 52:return 174;case 53:return 160;case 54:return 336;case 55:return 163;case 56:return 312;case 57:return 314;case 58:return 317;case 59:return 318;case 60:return 272;case 61:return 197;case 62:return 337;case 63:return 338;case 64:return 229;case 65:return 340;case 66:return 263;case 67:return 224;case 68:return 231;case 69:return 232;case 70:return 242;case 71:return 246;case 72:return 290;case 73:return 341;case 74:return 342;case 75:return 343;case 76:return 344;case 77:return 345;case 78:return 250;case 79:return 346;case 80:return 265;case 81:return 276;case 82:return 277;case 83:return 268;case 84:return 269;case 85:return 270;case 86:return 271;case 87:return 347;case 88:return 348;case 89:return 273;case 90:return 274;case 91:return 350;case 92:return 349;case 93:return 351;case 94:return 279;case 95:return 280;case 96:return 283;case 97:return 285;case 98:return 289;case 99:return 293;case 100:return 296;case 101:return 13;case 102:return 16;case 103:return 308;case 104:return 309;case 105:return 87;case 106:return 292;case 107:return 82;case 108:return 294;case 109:return 295;case 110:return 297;case 111:return 298;case 112:return 299;case 113:return 300;case 114:return 301;case 115:return 302;case 116:return"EXPONENT";case 117:return 303;case 118:return 304;case 119:return 305;case 120:return 306;case 121:return 89;case 122:return 310;case 123:return 6;case 124:return"INVALID";case 125:console.log(u.yytext);break}},"anonymous"),rules:[/^(?:\s+|(#[^\n\r]*))/i,/^(?:BASE)/i,/^(?:PREFIX)/i,/^(?:SELECT)/i,/^(?:DISTINCT)/i,/^(?:REDUCED)/i,/^(?:\()/i,/^(?:AS)/i,/^(?:\))/i,/^(?:\*)/i,/^(?:CONSTRUCT)/i,/^(?:WHERE)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:DESCRIBE)/i,/^(?:ASK)/i,/^(?:FROM)/i,/^(?:NAMED)/i,/^(?:GROUP)/i,/^(?:BY)/i,/^(?:HAVING)/i,/^(?:ORDER)/i,/^(?:ASC)/i,/^(?:DESC)/i,/^(?:LIMIT)/i,/^(?:OFFSET)/i,/^(?:VALUES)/i,/^(?:;)/i,/^(?:LOAD)/i,/^(?:SILENT)/i,/^(?:INTO)/i,/^(?:CLEAR)/i,/^(?:DROP)/i,/^(?:CREATE)/i,/^(?:ADD)/i,/^(?:TO)/i,/^(?:MOVE)/i,/^(?:COPY)/i,/^(?:INSERT((\s+|(#[^\n\r]*)\n\r?)+)DATA)/i,/^(?:DELETE((\s+|(#[^\n\r]*)\n\r?)+)DATA)/i,/^(?:DELETE((\s+|(#[^\n\r]*)\n\r?)+)WHERE)/i,/^(?:WITH)/i,/^(?:DELETE)/i,/^(?:INSERT)/i,/^(?:USING)/i,/^(?:DEFAULT)/i,/^(?:GRAPH)/i,/^(?:ALL)/i,/^(?:\.)/i,/^(?:OPTIONAL)/i,/^(?:SERVICE)/i,/^(?:BIND)/i,/^(?:UNDEF)/i,/^(?:MINUS)/i,/^(?:UNION)/i,/^(?:FILTER)/i,/^(?:<<)/i,/^(?:>>)/i,/^(?:\{\|)/i,/^(?:\|\})/i,/^(?:,)/i,/^(?:a)/i,/^(?:\|)/i,/^(?:\/)/i,/^(?:\^)/i,/^(?:\?)/i,/^(?:\+)/i,/^(?:!)/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\|\|)/i,/^(?:&&)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:IN)/i,/^(?:NOT)/i,/^(?:-)/i,/^(?:BOUND)/i,/^(?:BNODE)/i,/^(?:(RAND|NOW|UUID|STRUUID))/i,/^(?:(LANG|DATATYPE|IRI|URI|ABS|CEIL|FLOOR|ROUND|STRLEN|STR|UCASE|LCASE|ENCODE_FOR_URI|YEAR|MONTH|DAY|HOURS|MINUTES|SECONDS|TIMEZONE|TZ|MD5|SHA1|SHA256|SHA384|SHA512|isIRI|isURI|isBLANK|isLITERAL|isNUMERIC))/i,/^(?:(SUBJECT|PREDICATE|OBJECT|isTRIPLE))/i,/^(?:(LANGMATCHES|CONTAINS|STRSTARTS|STRENDS|STRBEFORE|STRAFTER|STRLANG|STRDT|sameTerm))/i,/^(?:CONCAT)/i,/^(?:COALESCE)/i,/^(?:IF)/i,/^(?:TRIPLE)/i,/^(?:REGEX)/i,/^(?:SUBSTR)/i,/^(?:REPLACE)/i,/^(?:EXISTS)/i,/^(?:COUNT)/i,/^(?:SUM|MIN|MAX|AVG|SAMPLE)/i,/^(?:GROUP_CONCAT)/i,/^(?:SEPARATOR)/i,/^(?:\^\^)/i,/^(?:true|false)/i,/^(?:(<(?:[^<>\"\{\}\|\^`\\\u0000-\u0020])*>))/i,/^(?:((([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?)?:))/i,/^(?:(((([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?)?:)((?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|:|[0-9]|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%)))))?)))/i,/^(?:(_:(?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?))/i,/^(?:([\?\$]((?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9])(?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])*)))/i,/^(?:(@[a-zA-Z]+(?:-[a-zA-Z0-9]+)*))/i,/^(?:([0-9]+))/i,/^(?:([0-9]*\.[0-9]+))/i,/^(?:([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+)))/i,/^(?:(\+([0-9]+)))/i,/^(?:(\+([0-9]*\.[0-9]+)))/i,/^(?:(\+([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:(-([0-9]+)))/i,/^(?:(-([0-9]*\.[0-9]+)))/i,/^(?:(-([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:([eE][+-]?[0-9]+))/i,/^(?:('(?:(?:[^\u0027\u005C\u000A\u000D])|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*'))/i,/^(?:("(?:(?:[^\u0022\u005C\u000A\u000D])|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*"))/i,/^(?:('''(?:(?:'|'')?(?:[^'\\]|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*'''))/i,/^(?:("""(?:(?:"|"")?(?:[^\"\\]|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*"""))/i,/^(?:(\((\u0020|\u0009|\u000D|\u000A)*\)))/i,/^(?:(\[(\u0020|\u0009|\u000D|\u000A)*\]))/i,/^(?:$)/i,/^(?:.)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],inclusive:!0}}};return i}();X3.lexer=j0;function L(){this.yy={}}return h(L,"Parser"),L.prototype=X3,X3.Parser=L,new L}(),c0=o0,l0="http://www.w3.org/2001/XMLSchema#integer",p0="http://www.w3.org/2001/XMLSchema#string";function s2(e){this._options=e=e||{};var s=e.prefixes||{};this._prefixByIri={};var o=[];for(var E in s){var y=s[E];C1(y)&&(this._prefixByIri[y]=E,o.push(y))}var e2=o.join("|").replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&");this._prefixRegex=new RegExp("^("+e2+")([a-zA-Z][\\-_a-zA-Z0-9]*)$"),this._usedPrefixes={},this._sparqlStar=e.sparqlStar,this._indent=C1(e.indent)?e.indent:"  ",this._newline=C1(e.newline)?e.newline:`
`,this._explicitDatatype=!!e.explicitDatatype}h(s2,"Generator$1"),s2.prototype.toQuery=function(e){var s="";return e.queryType&&(s+=e.queryType.toUpperCase()+" "),e.reduced&&(s+="REDUCED "),e.distinct&&(s+="DISTINCT "),e.variables?s+=D2(e.variables,void 0,function(o){return M2(o)?this.toEntity(o):"("+this.toExpression(o.expression)+" AS "+$1(o.variable)+")"},this)+" ":e.template&&(s+=this.group(e.template,!0)+this._newline),e.from&&(s+=this.graphs("FROM ",e.from.default)+this.graphs("FROM NAMED ",e.from.named)),e.where&&(s+="WHERE "+this.group(e.where,!0)+this._newline),e.updates&&(s+=D2(e.updates,";"+this._newline,this.toUpdate,this)),e.group&&(s+="GROUP BY "+D2(e.group,void 0,function(o){var E=M2(o.expression)?this.toEntity(o.expression):"("+this.toExpression(o.expression)+")";return o.variable?"("+E+" AS "+$1(o.variable)+")":E},this)+this._newline),e.having&&(s+="HAVING ("+D2(e.having,void 0,this.toExpression,this)+")"+this._newline),e.order&&(s+="ORDER BY "+D2(e.order,void 0,function(o){var E="("+this.toExpression(o.expression)+")";return o.descending?"DESC "+E:E},this)+this._newline),e.offset&&(s+="OFFSET "+e.offset+this._newline),e.limit&&(s+="LIMIT "+e.limit+this._newline),e.values&&(s+=this.values(e)),s=this.baseAndPrefixes(e)+s,s.trim()},s2.prototype.baseAndPrefixes=function(e){var s=e.base?"BASE <"+e.base+">"+this._newline:"",o="";for(var E in e.prefixes)(this._options.allPrefixes||this._usedPrefixes[E])&&(o+="PREFIX "+E+": <"+e.prefixes[E]+">"+this._newline);return s+o},s2.prototype.toPattern=function(e){var s=e.type||e instanceof Array&&"array"||(e.subject&&e.predicate&&e.object?"triple":"");if(!(s in this))throw new Error("Unknown entry type: "+s);return this[s](e)},s2.prototype.triple=function(e){return this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+"."},s2.prototype.array=function(e){return D2(e,this._newline,this.toPattern,this)},s2.prototype.bgp=function(e){return this.encodeTriples(e.triples)},s2.prototype.encodeTriples=function(e){if(!e.length)return"";for(var s=[],o=void 0,E=void 0,y=0;y<e.length;y++){var e2=e[y];q2(e2.subject,o)?q2(e2.predicate,E)?s.push(","):(E=e2.predicate,s.push(";"+this._newline,this._indent,this.toEntity(E))):(o&&s.push("."+this._newline),o=e2.subject,E=e2.predicate,s.push(this.toEntity(o)," ",this.toEntity(E))),s.push(" ",this.toEntity(e2.object))}return s.push("."),s.join("")},s2.prototype.graph=function(e){return"GRAPH "+this.toEntity(e.name)+" "+this.group(e)},s2.prototype.graphs=function(e,s){return!s||s.length===0?"":D2(s,"",function(o){return e+this.toEntity(o)+this._newline},this)},s2.prototype.group=function(e,s){return e=s!==!0?this.array(e.patterns||e.triples):this.toPattern(e.type!=="group"?e:e.patterns),e.indexOf(this._newline)===-1?"{ "+e+" }":"{"+this._newline+this.indent(e)+this._newline+"}"},s2.prototype.query=function(e){return this.toQuery(e)},s2.prototype.filter=function(e){return"FILTER("+this.toExpression(e.expression)+")"},s2.prototype.bind=function(e){return"BIND("+this.toExpression(e.expression)+" AS "+$1(e.variable)+")"},s2.prototype.optional=function(e){return"OPTIONAL "+this.group(e)},s2.prototype.union=function(e){return D2(e.patterns,this._newline+"UNION"+this._newline,function(s){return this.group(s,!0)},this)},s2.prototype.minus=function(e){return"MINUS "+this.group(e)},s2.prototype.values=function(e){var s=Object.keys(e.values.reduce(function(y,e2){for(var E2 in e2)y[E2]=!0;return y},{})),o,E;return s.length===1?o=E="":(o="(",E=")"),"VALUES "+o+s.join(" ")+E+" {"+this._newline+D2(e.values,this._newline,function(y){return"  "+o+D2(s,void 0,function(e2){return y[e2]?this.toEntity(y[e2]):"UNDEF"},this)+E},this)+this._newline+"}"},s2.prototype.service=function(e){return"SERVICE "+(e.silent?"SILENT ":"")+this.toEntity(e.name)+" "+this.group(e)},s2.prototype.toExpression=function(e){if(M2(e))return this.toEntity(e);switch(e.type.toLowerCase()){case"aggregate":return e.aggregation.toUpperCase()+"("+(e.distinct?"DISTINCT ":"")+this.toExpression(e.expression)+(typeof e.separator=="string"?'; SEPARATOR = "'+e.separator.replace(ne,ue)+'"':"")+")";case"functioncall":return this.toEntity(e.function)+"("+D2(e.args,", ",this.toExpression,this)+")";case"operation":var s=e.operator.toUpperCase(),o=e.args||[];switch(e.operator.toLowerCase()){case"<":case">":case">=":case"<=":case"&&":case"||":case"=":case"!=":case"+":case"-":case"*":case"/":return(M2(o[0])?this.toEntity(o[0]):"("+this.toExpression(o[0])+")")+" "+s+" "+(M2(o[1])?this.toEntity(o[1]):"("+this.toExpression(o[1])+")");case"!":return"!("+this.toExpression(o[0])+")";case"uplus":return"+("+this.toExpression(o[0])+")";case"uminus":return"-("+this.toExpression(o[0])+")";case"notin":s="NOT IN";case"in":return this.toExpression(o[0])+" "+s+"("+(C1(o[1])?o[1]:D2(o[1],", ",this.toExpression,this))+")";case"notexists":s="NOT EXISTS";case"exists":return s+" "+this.group(o[0],!0);default:return s+"("+D2(o,", ",this.toExpression,this)+")"}default:throw new Error("Unknown expression type: "+e.type)}},s2.prototype.toEntity=function(e){if(M2(e))switch(e.termType){case"Wildcard":return"*";case"Variable":return $1(e);case"BlankNode":return"_:"+e.value;case"Literal":var s=e.value||"",o=e.language||"",E=e.datatype;if(e='"'+s.replace(ne,ue)+'"',o)e+="@"+o;else if(E){if(!this._explicitDatatype)switch(E.value){case p0:return e;case l0:if(/^\d+$/.test(s))return s+" "}e+="^^"+this.encodeIRI(E.value)}return e;case"Quad":if(!this._sparqlStar)throw new Error("SPARQL* support is not enabled");return e.graph&&e.graph.termType!=="DefaultGraph"?"<< GRAPH "+this.toEntity(e.graph)+" { "+this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+" }  >>":"<< "+this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+" >>";default:return this.encodeIRI(e.value)}else{var y=e.items.map(this.toEntity,this),e2=e.pathType;switch(e2){case"^":case"!":return e2+y[0];case"*":case"+":case"?":return"("+y[0]+e2+")";default:return"("+y.join(e2)+")"}}};var ne=/["\\\t\n\r\b\f]/g,ue=h(function(e){return h0[e]},"escapeReplacer"),h0={"\\":"\\\\",'"':'\\"',"	":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};s2.prototype.encodeIRI=function(e){var s=this._prefixRegex.exec(e);if(s){var o=this._prefixByIri[s[1]];return this._usedPrefixes[o]=!0,o+":"+s[2]}return"<"+e+">"},s2.prototype.toUpdate=function(e){switch(e.type||e.updateType){case"load":return"LOAD"+(e.source?" "+this.toEntity(e.source):"")+(e.destination?" INTO GRAPH "+this.toEntity(e.destination):"");case"insert":return"INSERT DATA "+this.group(e.insert,!0);case"delete":return"DELETE DATA "+this.group(e.delete,!0);case"deletewhere":return"DELETE WHERE "+this.group(e.delete,!0);case"insertdelete":return(e.graph?"WITH "+this.toEntity(e.graph)+this._newline:"")+(e.delete.length?"DELETE "+this.group(e.delete,!0)+this._newline:"")+(e.insert.length?"INSERT "+this.group(e.insert,!0)+this._newline:"")+(e.using?this.graphs("USING ",e.using.default):"")+(e.using?this.graphs("USING NAMED ",e.using.named):"")+"WHERE "+this.group(e.where,!0);case"add":case"copy":case"move":return e.type.toUpperCase()+" "+(e.silent?"SILENT ":"")+(e.source.default?"DEFAULT":this.toEntity(e.source.name))+" TO "+this.toEntity(e.destination.name);case"create":case"clear":case"drop":return e.type.toUpperCase()+(e.silent?" SILENT ":" ")+(e.graph.default?"DEFAULT":e.graph.named?"NAMED":e.graph.all?"ALL":"GRAPH "+this.toEntity(e.graph.name));default:throw new Error("Unknown update query type: "+e.type)}},s2.prototype.indent=function(e){return e.replace(/^/gm,this._indent)};function $1(e){return"?"+e.value}h($1,"variableToString");function C1(e){return typeof e=="string"}h(C1,"isString");function M2(e){return typeof e.termType=="string"}h(M2,"isTerm");function q2(e,s){if(!e||!M2(e)||!s||!M2(s)||e.termType!==s.termType)return!1;switch(e.termType){case"Literal":return e.value===s.value&&e.language===s.language&&q2(e.datatype,s.datatype);case"Quad":return q2(e.subject,s.subject)&&q2(e.predicate,s.predicate)&&q2(e.object,s.object)&&q2(e.graph,s.graph);default:return e.value===s.value}}h(q2,"equalTerms");function D2(e,s,o,E){return e.map(o,E).join(C1(s)?s:" ")}h(D2,"mapJoin");var f0=h(function(s={}){return{stringify:function(o){var E=Object.create(s);return E.prefixes=o.prefixes,new s2(E).toQuery(o)},createGenerator:function(){return new s2(s)}}},"SparqlGenerator"),oe={},m1={};Object.defineProperty(m1,"__esModule",{value:!0}),m1.BlankNode=void 0;const k3=class k3{constructor(s){this.termType="BlankNode",this.value=s}equals(s){return!!s&&s.termType==="BlankNode"&&s.value===this.value}};h(k3,"BlankNode");let I3=k3;m1.BlankNode=I3;var e3={},V1={};Object.defineProperty(V1,"__esModule",{value:!0}),V1.DefaultGraph=void 0;const v3=class v3{constructor(){this.termType="DefaultGraph",this.value=""}equals(s){return!!s&&s.termType==="DefaultGraph"}};h(v3,"DefaultGraph");let k1=v3;V1.DefaultGraph=k1,k1.INSTANCE=new k1;var v1={},l1={};Object.defineProperty(l1,"__esModule",{value:!0}),l1.NamedNode=void 0;const R3=class R3{constructor(s){this.termType="NamedNode",this.value=s}equals(s){return!!s&&s.termType==="NamedNode"&&s.value===this.value}};h(R3,"NamedNode");let C3=R3;l1.NamedNode=C3,Object.defineProperty(v1,"__esModule",{value:!0}),v1.Literal=void 0;const ce=l1,P1=class P1{constructor(s,o){this.termType="Literal",this.value=s,typeof o=="string"?(this.language=o,this.datatype=P1.RDF_LANGUAGE_STRING):o?(this.language="",this.datatype=o):(this.language="",this.datatype=P1.XSD_STRING)}equals(s){return!!s&&s.termType==="Literal"&&s.value===this.value&&s.language===this.language&&this.datatype.equals(s.datatype)}};h(P1,"Literal");let R1=P1;v1.Literal=R1,R1.RDF_LANGUAGE_STRING=new ce.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),R1.XSD_STRING=new ce.NamedNode("http://www.w3.org/2001/XMLSchema#string");var O1={};Object.defineProperty(O1,"__esModule",{value:!0}),O1.Quad=void 0;const O3=class O3{constructor(s,o,E,y){this.termType="Quad",this.value="",this.subject=s,this.predicate=o,this.object=E,this.graph=y}equals(s){return!!s&&(s.termType==="Quad"||!s.termType)&&this.subject.equals(s.subject)&&this.predicate.equals(s.predicate)&&this.object.equals(s.object)&&this.graph.equals(s.graph)}};h(O3,"Quad");let m3=O3;O1.Quad=m3;var L1={};Object.defineProperty(L1,"__esModule",{value:!0}),L1.Variable=void 0;const L3=class L3{constructor(s){this.termType="Variable",this.value=s}equals(s){return!!s&&s.termType==="Variable"&&s.value===this.value}};h(L3,"Variable");let V3=L3;L1.Variable=V3,Object.defineProperty(e3,"__esModule",{value:!0}),e3.DataFactory=void 0;const y0=m1,F0=V1,le=v1,d0=l1,E0=O1,b0=L1;let _0=0,T0=(x1=class{constructor(s){this.blankNodeCounter=0,s=s||{},this.blankNodePrefix=s.blankNodePrefix||`df_${_0++}_`}namedNode(s){return new d0.NamedNode(s)}blankNode(s){return new y0.BlankNode(s||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(s,o){return new le.Literal(s,o)}variable(s){return new b0.Variable(s)}defaultGraph(){return F0.DefaultGraph.INSTANCE}quad(s,o,E,y){return new E0.Quad(s,o,E,y||this.defaultGraph())}fromTerm(s){switch(s.termType){case"NamedNode":return this.namedNode(s.value);case"BlankNode":return this.blankNode(s.value);case"Literal":return s.language?this.literal(s.value,s.language):s.datatype.equals(le.Literal.XSD_STRING)?this.literal(s.value):this.literal(s.value,this.fromTerm(s.datatype));case"Variable":return this.variable(s.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(s.subject),this.fromTerm(s.predicate),this.fromTerm(s.object),this.fromTerm(s.graph))}}fromQuad(s){return this.fromTerm(s)}resetBlankNodeCounter(){this.blankNodeCounter=0}},h(x1,"DataFactory"),x1);e3.DataFactory=T0,function(e){var s=c1&&c1.__createBinding||(Object.create?function(E,y,e2,E2){E2===void 0&&(E2=e2),Object.defineProperty(E,E2,{enumerable:!0,get:function(){return y[e2]}})}:function(E,y,e2,E2){E2===void 0&&(E2=e2),E[E2]=y[e2]}),o=c1&&c1.__exportStar||function(E,y){for(var e2 in E)e2!=="default"&&!Object.prototype.hasOwnProperty.call(y,e2)&&s(y,E,e2)};Object.defineProperty(e,"__esModule",{value:!0}),o(m1,e),o(e3,e),o(V1,e),o(v1,e),o(l1,e),o(O1,e),o(L1,e)}(oe);var R2=c0.Parser,D0=f0,A0=I1.Wildcard,{DataFactory:g0}=oe,N0={Parser:function({prefixes:e,baseIRI:s,factory:o,sparqlStar:E,skipValidation:y,skipUngroupedVariableCheck:e2,pathOnly:E2}={}){var I2={};for(var T2 in e||{})I2[T2]=e[T2];var Z2=new R2;return Z2.parse=function(){return R2.base=s||"",R2.prefixes=Object.create(I2),R2.factory=o||new g0,R2.sparqlStar=!!E,R2.pathOnly=!!E2,R2.skipValidation=!!y||!!e2,R2.prototype.parse.apply(Z2,arguments)},Z2._resetBlanks=R2._resetBlanks,Z2},Generator:D0,Wildcard:A0};const S0=new N0.Parser;async function I0(e){if(e.trim().length===0)return{success:!0,data:null};try{return{success:!0,data:structuredClone(S0.parse(e))}}catch(s){return{success:!1,data:s.message}}}h(I0,"evaluate");function C0(e){if(typeof e!="object"||e===null)throw new Error("Invalid message")}h(C0,"ensureRecord");function m0(e){if(C0(e),typeof e.id!="string")throw new Error("Invalid message id");if(e.type!=="evaluate")throw new Error("Invalid message type");if(typeof e.code!="string")throw new Error("Invalid message payload: code")}h(m0,"validateMessage"),addEventListener("message",async e=>{const s=e.data;m0(s);const o=await I0(s.code);postMessage({type:"evaluated",payload:o,id:s.id})})})();
